<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>葬送的芙莉莲</title>
      <link href="/2024/03/23/Frieren/"/>
      <url>/2024/03/23/Frieren/</url>
      
        <content type="html"><![CDATA[<p><img src="https://github.com/wangquanlikun/Blog_IMAGE/blob/main/Frieren.jpg?raw=false" alt="Frieren"></p><blockquote><p>无论是勇者小队的征程，还是与弟子重新踏上的旅途<br>无论是那些看似微不足道的善事，还是那些收集到的所谓“无聊”魔法<br>有太多人只记得打败魔王的史诗，但是<br>「日常」一直发生在我们身边<br>十年的时间很长，十年的时间很短。足以改变历史，也足以让芙莉莲走上了解人类的道路<br>但也许，只是她日常的一瞬<br>是她漫长人生的一个缩影<br>我们说，这一切一切每个平凡的日常，就是连续发生的奇迹<br>也许你我不是生命的全部，但是我们足够幸运终能相遇<br>要去珍惜每一个遇见的人。死亡并不是唯一的永别方式<br>但不要为分别过度感伤，我们相信终有一天还能重逢<br>只要心中铭记，就不会忘却<br>那些过去的人，那些过去的事，即便是过去「平凡」的每一天</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 二次元 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Cordova构建基于前端开发的安卓APP</title>
      <link href="/2024/03/11/Electron-app-build/"/>
      <url>/2024/03/11/Electron-app-build/</url>
      
        <content type="html"><![CDATA[<h2 id="Electron"><a href="#Electron" class="headerlink" title="Electron"></a>Electron</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>&emsp;&emsp;<strong>Electron</strong>是一个使用<code>JavaScript</code>、<code>HTML</code>和<code>CSS</code>构建桌面应用程序的框架。 嵌入<code>Chromium</code>和<code>Node.js</code>到二进制的<code>Electron</code>允许您保持一个<code>JavaScript</code>代码代码库并创建在Windows、macOS和Linux上运行的跨平台应用</p><p>前往<a href="https://www.electronjs.org/zh/docs/latest/tutorial/quick-start">官方教程</a>以查看<strong>快速入门</strong></p><h3 id="打包并分发"><a href="#打包并分发" class="headerlink" title="打包并分发"></a>打包并分发</h3><p>最快捷的打包方式是使用 <a href="https://www.electronforge.io/">Electron Forge</a><br>使用如下代码将<code>Electron Forge</code>添加到您应用的开发依赖中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev @electron-forge/cli</span><br><span class="line">npx electron-forge import</span><br></pre></td></tr></table></figure><p>使用 <code>Forge</code> 的 <code>make</code> 命令来创建可分发的应用程序：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run make</span><br></pre></td></tr></table></figure><p>若提示缺少了<code>@electron-forge/plugin-fuses</code>模块，可使用如下代码安装后重新打包：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev @electron-forge/plugin-fuses</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;我们可以看到，经过此步骤后可以生成跨平台的桌面应用程序，但它并不能直接打包成安卓应用程序。不过，可以使用一些工具来将 Electron 应用程序打包成 Android 应用程序</p><h2 id="Cordova"><a href="#Cordova" class="headerlink" title="Cordova"></a>Cordova</h2><h3 id="Cordova简介"><a href="#Cordova简介" class="headerlink" title="Cordova简介"></a>Cordova简介</h3><p>&emsp;&emsp;<strong>Apache Cordova</strong>，旧称 PhoneGap，是一款开放源代码的移动设备开发框架，旨在让开发者使用<code>HTML</code>、<code>Javascript</code>、<code>CSS</code>等Web APIs开发跨平台的移动设备应用程序</p><h3 id="打包Android应用"><a href="#打包Android应用" class="headerlink" title="打包Android应用"></a>打包Android应用</h3><p>1.在本地安装 Cordova 和 Android SDK（Android Studio + Gradle）<br>2.使用 Cordova 命令行工具创建一个新的 Cordova 项目，执行以下命令：<br>&emsp;&emsp;其中，<code>my-app</code>是项目的目录名称，<code>com.example.myapp</code>是应用程序的包名称，<code>MyApp</code>是应用程序的名称</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cordova create my-app com.example.myapp MyApp</span><br></pre></td></tr></table></figure><p>3.将 Electron 应用程序的所有文件复制到 Cordova 项目的 <code>www</code> 目录中，这是 Cordova 打包应用程序时使用的文件夹<br>4.执行以下命令以添加 Android 平台：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cordova platform add android</span><br></pre></td></tr></table></figure><p>5.执行以下命令以构建 Cordova 应用程序：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cordova build android</span><br></pre></td></tr></table></figure><h2 id="相关错误"><a href="#相关错误" class="headerlink" title="相关错误"></a>相关错误</h2><h3 id="Ⅰ-软件版本"><a href="#Ⅰ-软件版本" class="headerlink" title="Ⅰ.软件版本"></a>Ⅰ.软件版本</h3><h4 id="Gradle"><a href="#Gradle" class="headerlink" title="Gradle"></a>Gradle</h4><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Deprecated Gradle features were used in this build, making it incompatible with Gradle 8.0.</span><br></pre></td></tr></table></figure><p>由于以上关系，我在这里推荐前往下载Gradle v7.6.4。前往<a href="https://gradle.org/install/#helpful-information">官方文档</a>查看安装教程</p><h4 id="JDK"><a href="#JDK" class="headerlink" title="JDK"></a>JDK</h4><p>与此同时，可能会存在以下报错：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BUG! exception in phase &#x27;semantic analysis&#x27; in source unit &#x27;<span class="emphasis">_BuildScript_</span>&#x27; Unsupported class file major version 65</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;这个报错通常是由于 Gradle 版本不兼容导致的。Gradle 7.x 不支持 Java 16 中引入的 class 文件版本 65。可以将将 JDK 版本降低到支持 Gradle 7.x 的版本。由于JDK 8 存在一些过时的应用，在这里推荐使用 JDK 11。前往<a href="https://www.oracle.com/java/technologies/downloads/#java11">这里</a>以下载</p><h3 id="Ⅱ-环境变量"><a href="#Ⅱ-环境变量" class="headerlink" title="Ⅱ.环境变量"></a>Ⅱ.环境变量</h3><h4 id="Android-SDK"><a href="#Android-SDK" class="headerlink" title="Android SDK"></a>Android SDK</h4><p>下载并安装完成Android Studio后，在More Actions - Android SDK - SDK Tools当中选择合适的版本<code>Android SDK Build-Tools</code>下载<br>在环境变量-系统变量当中，添加<code>ANDROID_HOME</code>的变量，变量值是SDK根目录</p><h4 id="JAVA-HOME"><a href="#JAVA-HOME" class="headerlink" title="JAVA_HOME"></a>JAVA_HOME</h4><p>下载并安装完成JAVA 11后，在环境变量-系统变量中新建<code>JAVA_HOME</code>变量，变量值是JDK路径，如<code>C:\Program Files\Java\jdk-11</code></p><h3 id="Ⅲ-配置文件"><a href="#Ⅲ-配置文件" class="headerlink" title="Ⅲ.配置文件"></a>Ⅲ.配置文件</h3><p>若出现<code>.\platforms\android\app\build.gradle</code>的如下问题：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Could not find method namespace()</span><br></pre></td></tr></table></figure><p>修复方式为将该行语句使用<code>//</code>注释化</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compileSdkVersion is not specified. Please add it to build.gradle</span><br></pre></td></tr></table></figure><p><code>compileSdkVersion</code>没有被指定。修改方法为将此句改为<code>compileSdkVersion 33 // 此处指定你要使用的 SDK 版本</code></p><p>若出现<code>.\platforms\android\app\src\main\AndroidManifest.xml</code>的如下问题：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Error while evaluating property &#x27;buildConfigPackageName&#x27; of task &#x27;:app:generateDebugBuildConfig&#x27;.</span><br><span class="line">   Failed to calculate the value of task &#x27;:app:generateDebugBuildConfig&#x27; property &#x27;buildConfigPackageName&#x27;.</span><br><span class="line"><span class="code">      Failed to query the value of property &#x27;packageName&#x27;.</span></span><br><span class="line"><span class="code">         Package Name not found in .\platforms\android\app\src\main\AndroidManifest.xml</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;这个错误表明在生成调试版（debug）的构建配置时，Gradle 无法找到 Android 清单文件（AndroidManifest.xml）中的包名（package name）。这可能是因为 AndroidManifest.xml 中确实没有指定包名。请打开 <code>AndroidManifest.xml</code> 文件，查找 <code>&lt;manifest&gt;</code> 标签，并确保其中有一个 <code>package</code> 属性，类似于：<code>package=&quot;com.example.myapp&quot;</code>。如果没有，请添加正确的包名<br>&emsp;&emsp;该错误也会发生在<code>.\platforms\android\CordovaLib\AndroidManifest.xml</code></p><h3 id="Ⅳ-其它错误"><a href="#Ⅳ-其它错误" class="headerlink" title="Ⅳ.其它错误"></a>Ⅳ.其它错误</h3><p>对于Android SDK，可能会存在如下报错：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Installed Build Tools is corrupted</span><br></pre></td></tr></table></figure><p>提示找不到<code>dx.bat</code>文件。此时在你的Android SDK目录中找到build tools目录中的<code>d8.bat</code>，将文件名修改为<code>dx.bat</code>。同时，找到build tools目录中的<code>lib/d8.jar</code>，将文件名修改为<code>dx.jar</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSAPP实验：拆解二进制炸弹</title>
      <link href="/2023/11/21/CSAPP_Exp_Bomb/"/>
      <url>/2023/11/21/CSAPP_Exp_Bomb/</url>
      
        <content type="html"><![CDATA[<style>    img {    border-radius: 6px; /* 设置圆角半径 */    width: 95%; /* 设置宽度为父元素宽度的95% */}</style><h2 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h2><p><strong>关于开放知识共享的声明：</strong><br>&emsp;&emsp;开源和分享的目的是为了相互学习和借鉴，而<strong>不是为了抄袭</strong>。我们鼓励使用开源项目来了解优秀的编程实践、算法和解决方案。然而，我们严格禁止抄袭他人的代码或将其用于商业目的。请尊重他人的劳动成果，展示你自己的创造力和独立思考能力<br>&emsp;&emsp;学校作业的提交通常会受到<strong>查重要求</strong>。学校的数据库中往往包含了<strong>往届学生</strong>提交的内容。因此，严禁随意使用开源项目来完成作业。这种行为将被视为抄袭，可能导致严重的学术后果。我们鼓励学生们通过独立思考和努力来完成作业，从而加深对所学知识的理解和应用能力</p><p>本文在完成提交所有作业并结课得到评分后发出，参考本人实验报告原文并进行适当修改</p><p>请注意：CSAPP实验存在多种相似问题的不同组合。由此，每个人所得到的具体题目都将会<strong>不同</strong>。本人仅在此代表其中一种题目组合的解法及其他题目的相关思路。</p><h2 id="X86-64架构"><a href="#X86-64架构" class="headerlink" title="X86-64架构"></a>X86-64架构</h2><h3 id="一-准备阶段"><a href="#一-准备阶段" class="headerlink" title="一.准备阶段"></a>一.准备阶段</h3><p>1.使用<code>tar -xvf ./bomb163.tar</code>解压缩文件，得到<code>README</code> 、<code>bomb</code>可执行文件与包含部分C语言源代码的文件<br>2.使用<code>objdump -S -d bomb &gt; bomb.c.txt</code>反汇编bomb可执行文件，得到<code>bomb.c.txt</code>汇编代码，使用vim工具查看<br>3.使用<code>gdb ./bomb</code>在GDB调试工具下运行炸弹程序<br>4.通过<code>break explode_bomb</code>在函数<code>&lt;explode_bomb&gt;</code>位置处设下断点，阻止错误时发生爆炸<br>5.在GDB初始模式下，<code>run</code>可以运行程序<br>6.在GDB调试下，使用<code>disassemble</code>可以反汇编当前函数并查看执行到了汇编的第几步骤</p><h3 id="炸弹1"><a href="#炸弹1" class="headerlink" title="炸弹1"></a>炸弹1</h3><p>查看<code>&lt;phase_1&gt;</code>对应汇编代码，发现将<code>0x402690</code>放入<code>%esi</code>寄存器中，进入<code>&lt;string_not_equal&gt;</code>，若返回值为0<code>(false)</code>则不执行<code>&lt;explode_bomb&gt;</code>发生爆炸。即应当满足两字符串相等<br><img src="https://github.com/wangquanlikun/Blog_IMAGE/blob/main/CSAPP_Exp/IMAGE-BOMB-1-01.png?raw=true" alt="IMAGE-BOMB-1-01"><br>字符串记录方式为数组地址。通过gdb下在<code>&lt;explode_bomb&gt;</code>设置断点的方式，避免发生爆炸。在GDB模式下，通过<code>x</code>指令，查看对应内存地址<code>0x402690</code>所存的数据为字符串<code>“Only you can give me that feeling.”</code>。因此答案即为该输入<br><img src="https://github.com/wangquanlikun/Blog_IMAGE/blob/main/CSAPP_Exp/IMAGE-BOMB-1-02.png?raw=true" alt="IMAGE-BOMB-1-02"></p><h3 id="炸弹2"><a href="#炸弹2" class="headerlink" title="炸弹2"></a>炸弹2</h3><p><code>%rsp</code>寄存器对应内存地址在<code>&lt;read_six_numbers&gt;</code>中读入，且单个读入数据为4大小。<br>若<code>%rsp</code>寄存器对应地址所存数据不为0，则跳转到<code>&lt;phase_2+0x2b&gt;</code>行执行，即<code>callq &lt;explode_bomb&gt;</code>发生爆炸<br>若<code>%rsp</code>寄存器对应地址+4 所存数据为1，则跳转到<code>&lt;phase_2+0x30&gt;</code>行执行，否则发生爆炸<br>将<code>%rbp</code>寄存器存入<code>%rsp</code>寄存器<code>+0x10</code>作为进行循环的判断条件，即循环4次<br>每次循环中，<code>%eax</code>寄存器累加<code>%rbx</code>寄存器对应地址与<code>%rbx</code>寄存器对应地址+4处数据，并与<code>%rbx</code>寄存器对应地址+8处数据进行比较。若不相等则发生爆炸。即对于该数组，从第三位开始，每位数据应等于前两位相加。<br><img src="https://github.com/wangquanlikun/Blog_IMAGE/blob/main/CSAPP_Exp/IMAGE-BOMB-2-01.png?raw=true" alt="IMAGE-BOMB-2-01"><br>因此，输入为0、1开头的共6个累加得到的数，即<code>0 1 1 2 3 5</code></p><h3 id="炸弹3"><a href="#炸弹3" class="headerlink" title="炸弹3"></a>炸弹3</h3><p>在调用<code>scanf</code>之前，查看<code>0x4029ad</code>地址所存内容为<code>%d %d</code>，因此为读入两个整型<br><img src="https://github.com/wangquanlikun/Blog_IMAGE/blob/main/CSAPP_Exp/IMAGE-BOMB-3-01.png?raw=true" alt="IMAGE-BOMB-3-01"><br><code>%eax</code>寄存器的值大于1时会调用<code>&lt;explode_bomb&gt;</code>函数，否则会继续执行后续指令<code>&lt; phase_3+0x30&gt;</code> = <code>&lt;400fe5&gt;:cmpl $0x7, (%rsp)</code><br>将<code>%rsp</code>寄存器对应地址数据与7相比较，若大于7则跳转到<code>&lt;phase_3+0x71&gt;</code> = <code>&lt;401026&gt;</code>发生爆炸。<br><code>mov (%rsp),%eax;</code> <code>jmpq *0x4026e0(,%rax,8);</code>因此根据输入的第一个数值，将<code>%rsp</code>寄存器对应地址数据移植<code>%rax</code>，并跳转到<code>(8 * rax + 0x4026e0)</code>处所存的地址<br>若输入1，则跳转到<code>0x4026e8</code>地址所储存的地址<br><img src="https://github.com/wangquanlikun/Blog_IMAGE/blob/main/CSAPP_Exp/IMAGE-BOMB-3-02.png?raw=true" alt="IMAGE-BOMB-3-02"><br>通过<code>x/x 0x4026e8</code>查看，该地址为<code>0x400ff5</code><br>该行执行：<code>400ff5: mov $0x2d8, %eax</code>，随后<code>jmp 401037 &lt;phase_3+0x82&gt;</code>开始比较<br>因此输入为<code>0x2d8</code> = 728<br><img src="https://github.com/wangquanlikun/Blog_IMAGE/blob/main/CSAPP_Exp/IMAGE-BOMB-3-03.png?raw=true" alt="IMAGE-BOMB-3-03"><br>因此，最终输入可以为<code>1 728</code>.<br>该答案并不唯一。因为输入的首个数可以是0到7的任意整数，对应跳转到<code>(8 * rax + 0x4026e0)</code>处所存的不同的地址</p><h3 id="炸弹4"><a href="#炸弹4" class="headerlink" title="炸弹4"></a>炸弹4</h3><p>同理在调用<code>scanf</code>函数之前，查看<code>0x4029ad</code>地址所存内容为<code>%d %d</code>，因此为读入两个整型<br>将<code>%eax</code>与<code>0x2</code>相比较，若<code>%eax</code>等于数值<code>2</code>则跳转至<code>4010cd</code>调用爆炸函数<br><code>mov (%rsp), %eax</code>，将读入第一个数据放入<code>%eax</code>中。并执行<code>%eax-2</code>，之后再次进行比较。若<code>%eax</code>等于数值2，则跳转至<code>4010de</code>，否则发生爆炸。之后，将输入值移入<code>%esi</code>，<code>$0x8</code>移入<code>%edi</code>，调用<code>fun4</code>函数。由此可以看出，第二个输入应当为<code>4</code><br><img src="https://github.com/wangquanlikun/Blog_IMAGE/blob/main/CSAPP_Exp/IMAGE-BOMB-4-01.png?raw=true" alt="IMAGE-BOMB-4-01"><br>在<code>phase_4</code>当中，执行完<code>func4</code>后，比较<code>func4</code>函数返回值<code>%eax</code>与<code>(%rsp+0x4)</code>所存输入的第二个数进行比较，若相等跳转<code>4010ea</code>避免发生爆炸<br>在运行完后，通过查看<code>%eax</code>数值，确定为<code>216</code><br><img src="https://github.com/wangquanlikun/Blog_IMAGE/blob/main/CSAPP_Exp/IMAGE-BOMB-4-02.png?raw=true" alt="IMAGE-BOMB-4-02"><br>故输入答案为<code>216 4</code></p><h3 id="炸弹5"><a href="#炸弹5" class="headerlink" title="炸弹5"></a>炸弹5</h3><p>在执行输入前，可以注意到，在地址$0x4029ad中所存字符串为“%d %d”，推测为输入两个整型<br><img src="https://github.com/wangquanlikun/Blog_IMAGE/blob/main/CSAPP_Exp/IMAGE-BOMB-5-01.png?raw=true" alt="IMAGE-BOMB-5-01"><br>调用<code>scanf</code>函数后，通过比较指令检查，如果<code>%eax</code>的值大于1，那么程序将跳转到<code>phase_5</code>中的地址<code>0x401134</code>，否则继续执行下一条指令（发生爆炸）<br>将栈顶的值（<code>%rsp</code>指向的地址）（读入的第一个整型）加载到<code>%eax</code>寄存器中，将<code>%eax</code>寄存器中的值与<code>15</code>（二进制四位为1）进行按位与操作，只保留最低的4位，将结果存储回栈顶。将<code>%eax</code>与 15 进行比较，如果相等，跳转到<code>401171</code>（发生爆炸）<br><img src="https://github.com/wangquanlikun/Blog_IMAGE/blob/main/CSAPP_Exp/IMAGE-BOMB-5-02.png?raw=true" alt="IMAGE-BOMB-5-02"><br>将0存储到<code>%ecx</code>寄存器，将0存储到<code>%edx</code>寄存器，<code>&lt;40114c&gt;</code>将<code>%edx</code>加1<br>从一个数组中读取一个值，数组的起始地址为<code>0x402720</code>，索引是<code>%rax</code>的4倍。结果存储在<code>%eax</code>。<code>%ecx = %eax+%ecx</code>.将<code>%eax</code>与15进行比较。如果不相等，跳转到<code>40114c</code><br>将 15 存储到栈顶，将<code>%edx</code>与15进行比较，如果不相等，跳转到<code>401171</code>（发生爆炸）<br>将栈上偏移4位置的值（读入的第二个整型）与<code>%ecx</code>比较，如果相等，跳转到<code>401176</code>，否则继续执行（发生爆炸）。<br>由上分析，最终<code>%edx</code>应该为15。故循环应该执行15次<code>%edx</code>加1</p><p>通过对于<code>0x402720</code>内存地址的分析，可以得知，以该内存为基址，存放了0-15共16个整型。因此，<code>%eax</code>分别通过索引访问，并将指向的整型作为下一轮的索引。<br><img src="https://github.com/wangquanlikun/Blog_IMAGE/blob/main/CSAPP_Exp/IMAGE-BOMB-5-03.png?raw=true" alt="IMAGE-BOMB-5-03"><br><code>%eax</code>最终为15，索引为<code>24（= 4 * 6）</code><br><code>%ecx</code>为逐次累加的%eax数值，等于第二个输入的整型<code>115</code><br><code>%eax</code>最初的数值为第一个整型与15进行按位与操作，且操作完不为<code>15</code> <code>（%eax != 15）</code><br><code>%eax</code>按位与后为5，故输入为5</p><p>通过如上问题分析可得，正确答案应为<code>5 115</code></p><h3 id="炸弹6"><a href="#炸弹6" class="headerlink" title="炸弹6"></a>炸弹6</h3><p>将<code>%eax</code>寄存器的值与立即数<code>0x5</code>进行比较，如果比较结果满足小于等于条件，则跳转到地址 <code>4011d4</code> 处（避免爆炸）。<code>%eax - 1 &lt;= 5</code>，故输入的数据应当小于等于6<br>已知 <code>%r14d</code>寄存器为<code>0x0 + 0x1 != 0x6</code>，因此不执行跳转<code>4011ff</code><br><code>%eax</code> 寄存器为<code>%rsp + 4 * %rax地址</code>处的数据，且 <code>%rax</code>数值为1。<code>%eax</code>, <code>0x0(%rbp)</code>应当不相等，跳转到<code>4011f1</code>处（避免爆炸）。（此时<code>%rbp = %rsp</code>）<br>此时 <code>%ebx</code>寄存器数值为<code>0x1 + 0x1 &lt;= 0x5</code>。故跳转回<code>4011e1</code>地址。不执行跳转需要执行共计6次使不小于等于5。此时在跳转中仍有比较 <code>%eax</code>, <code>0x0(%rbp)</code>应当不相等。<br>在跳出循环之后，寄存器<code>%r13</code>加上4，无条件跳转<code>4011c0</code>地址。<br><img src="https://github.com/wangquanlikun/Blog_IMAGE/blob/main/CSAPP_Exp/IMAGE-BOMB-6-01.png?raw=true" alt="IMAGE-BOMB-6-01"><br>初次执行时，寄存器 <code>%r13</code>为寄存器 <code>%rsp</code>内地址<br>在外部循环，需要比较<code>$0x6</code>, <code>%r14d</code>相等时<code>4011ff</code>地址，其在各次执行中数值<code>+1</code>，故需要执行共计6次<br>由此看出，通过双循环，外部保证输入的六个数要大于等于1，且小于等于6，内部保证互异。因此通过<code>&lt;read_six_numbers&gt;</code>读入的六个数字为<strong>特定顺序的1 2 3 4 5 6</strong><br>接下来通过循环，将读入的6个数，分别用<strong>0x7立即数减去这六个数</strong>，并放回原地址当中<br>通过进行两层循环，构造结构体，并在其中将其存放位置按照输入的数的大小计算得出<br><img src="https://github.com/wangquanlikun/Blog_IMAGE/blob/main/CSAPP_Exp/IMAGE-BOMB-6-02.png?raw=true" alt="IMAGE-BOMB-6-02"><br><img src="https://github.com/wangquanlikun/Blog_IMAGE/blob/main/CSAPP_Exp/IMAGE-BOMB-6-03.png?raw=true" alt="IMAGE-BOMB-6-03"><br>扫描内存地址<code>0x6042f0</code>所得到的<code>node</code>结构体内容<br>比较<code>%eax</code>,<code>(%rbx)</code>，大于或等于跳转到<code>401293</code>避免爆炸。<code>%ebp</code>初始为5，减至0时不再跳转<code>401284</code>即结束循环。<br>故可得，通关条件是要求前面<code>node</code>数据大于后面的节点。即989 &gt; 970 &gt; … &gt; 289<br>根据<code>node</code>结构体内的数据，通过<strong>7减去输入数据</strong>处理后结果为<code>5 3 1 4 2 6</code>。<br><img src="https://github.com/wangquanlikun/Blog_IMAGE/blob/main/CSAPP_Exp/IMAGE-BOMB-6-04.png?raw=true" alt="IMAGE-BOMB-6-04"><br>因此原来的数据为输入<code>2 4 6 3 5 1</code></p><h3 id="隐藏炸弹"><a href="#隐藏炸弹" class="headerlink" title="隐藏炸弹"></a>隐藏炸弹</h3><p>完成“所有”炸弹后，我们注意到了还有一个<code>&lt;secret_phase&gt;</code>函数没有使用。查找定位只有在<code>&lt;phase_defused&gt;</code>函数中有对<code>&lt;secret_phase&gt;</code>函数的调用</p><p>在该函数中，对于<code>&lt;strings_not_equal&gt;</code>函数的返回值 <code>%eax</code>，若不相等则会跳过调用<code>secret_phase</code>。因此查看输入了什么字符串。<br>对于<code>scanf</code>函数，返回值应为3。因此需要读入三个元素。已知调用该函数时读入了两整型。<br>在<code>0x402a00</code>地址处，打印得知：该需要读入的字符串为<code>DrEvil</code><br><img src="https://github.com/wangquanlikun/Blog_IMAGE/blob/main/CSAPP_Exp/IMAGE-BOMB-7-01.png?raw=true" alt="IMAGE-BOMB-7-01"><br>在<strong>炸弹4</strong>中调用了<code>scanf</code>函数。读入方式为<code>“%d %d %s”</code>。因此在其输入后加上字符串<code>“DrEvil”</code>。由此，在炸弹6之后进入了隐藏关卡<br>进入后，查看源代码为首先使用了<code>&lt;read_line&gt;</code>及<code>&lt;strtol@plt&gt;</code>函数，将返回值<code>%rax–0x1</code>与立即数<code>$0x3e8</code>比较，小于等于可以跳转避免爆炸。因此输入的数应为小于等于<code>1001</code>。<br>将 <code>%edi</code>置为<code>$0x604110</code>，调用函数<code>&lt;fun7&gt;</code>。调用该函数之后，要使返回值 <code>%eax</code>与 <code>$0x7</code>比较，相等可以跳转避免爆炸。因此探究如何使得函数<code>&lt;fun7&gt;</code>返回值等于7。<br>查看函数<code>&lt;fun7&gt;</code>，可以看出是一个递归调用。其中初始<code>(%rdi = 0x604110)= 36</code>，<code>%esi= 3</code>。<br>开头，若<code>%rdi</code>等于0，则直接跳转返回<code>0xffffffff</code><br>函数递归出口为地址 <code>4012f7</code>，返回 <code>%eax</code><br>存在三条路径，分别为：<br>1）<code>add %eax, %eax</code> 2）<code>mov $0x0,%eax</code> 3）<code>lea 0x1(%rax,%rax,1), %eax</code><br>其分别为：<code>%eax *= 2</code>; <code>%eax = 0</code>; <code>%eax = 2*%rax + 1</code>;<br>要使<code>%eax</code>返回值为7，因此做法为：<code>(2).0-&gt;(3).1-&gt;(3).3-&gt;(3).7</code><br>其中<code>%rdi</code>有2种操作，分别为<code>mov 0x8(%rdi),%rdi</code>; <code>mov 0x10(%rdi),%rdi</code><br>其分别为：<code>%rdi += 8</code>; <code>%rdi += 16</code>;<br>对于rdi附近内存地址的考察有：<br><img src="https://github.com/wangquanlikun/Blog_IMAGE/blob/main/CSAPP_Exp/IMAGE-BOMB-7-02.png?raw=true" alt="IMAGE-BOMB-7-02"><br><img src="https://github.com/wangquanlikun/Blog_IMAGE/blob/main/CSAPP_Exp/IMAGE-BOMB-7-03.png?raw=true" alt="IMAGE-BOMB-7-03"><br>因此考察需要输入的数据：<code>1001</code></p><h2 id="ARM架构"><a href="#ARM架构" class="headerlink" title="ARM架构"></a>ARM架构</h2><h3 id="一"><a href="#一" class="headerlink" title="一"></a>一</h3><p>查看<code>&lt;phase_1&gt;</code>源代码，可以看出传入了<code>x1</code>寄存器数据为基地址<code>0x402000</code>以及加值<code>0x608</code>。故使用<code>x</code>查看当前内存数据，将该字符串传入后与输入数据进行比较。若<code>&lt;strings_not_equal&gt;</code>返回为<code>0</code>则字符串匹配，不爆炸结束阶段一<br><img src="https://github.com/wangquanlikun/Blog_IMAGE/blob/main/CSAPP_Exp/ARM01.png?raw=true" alt="ARM01"></p><h3 id="二"><a href="#二" class="headerlink" title="二"></a>二</h3><p>查看<code>&lt;phase_2</code>&gt;源代码，可以看出其通过<code>&lt;read_six_numbers&gt;</code>读入了6个数。<br>对于入栈区的元素，首个元素应为0，次位元素应为1，之后执行循环共计6次。<br>其中下一个元素等于前两个元素之和，因此输入应为<code>0 1 1 2 3 5</code>可以满足要求。<br><img src="https://github.com/wangquanlikun/Blog_IMAGE/blob/main/CSAPP_Exp/ARM02.png?raw=true" alt="ARM02"></p><h3 id="三"><a href="#三" class="headerlink" title="三"></a>三</h3><p>对于<code>&lt;phase_3&gt;</code>源代码，首先赋值<code>x1</code>寄存器基地址<code>0x402000</code>，然后增加数值<code>0x368</code>。<br><code>scanf</code>返回值为读入数据个数，应不小于等于1.<br>此处读入两个数。将首个数<code>[x29, #28]</code>加载入<code>x0</code>寄存器，可以看出，若读入首个数为1时，首先比较1与3，跳转到<code>0x401134</code>，然后等于1，跳转到<code>0x401150</code>。此处加载的第二个数据为<code>0x4a = 74</code>。因此输入<code>1 74</code>可以满足要求。<br><img src="https://github.com/wangquanlikun/Blog_IMAGE/blob/main/CSAPP_Exp/ARM03.png?raw=true" alt="ARM03"></p><h3 id="四"><a href="#四" class="headerlink" title="四"></a>四</h3><p>在函数<code>&lt;phase_4&gt;</code>当中，首先读入2个数据，且读入首个数据应当小于<code>0xe = 14</code>。之后调用<code>&lt;func4&gt;</code>函数进行处理<br><img src="https://github.com/wangquanlikun/Blog_IMAGE/blob/main/CSAPP_Exp/ARM0401.png?raw=true" alt="ARM0401"><br>首先查看其返回值。返回值应当与读入的第二个数值相等<br><img src="https://github.com/wangquanlikun/Blog_IMAGE/blob/main/CSAPP_Exp/ARM0402.png?raw=true" alt="ARM0402"><br>通过输入不同的数据后，使用gdb查看寄存器<code>w0</code>数据，可以得到<code>8 35</code>满足要求<br><img src="https://github.com/wangquanlikun/Blog_IMAGE/blob/main/CSAPP_Exp/ARM0403.png?raw=true" alt="ARM0403"></p><h3 id="五"><a href="#五" class="headerlink" title="五"></a>五</h3><p>可以看出，读入了一串字符串，且字符串长度为6。查看最后进行比较的部分，其中x1寄存器为基地址<code>0x402000 + 0x640</code><br><img src="https://github.com/wangquanlikun/Blog_IMAGE/blob/main/CSAPP_Exp/ARM0501.png?raw=true" alt="ARM0501"><br><code>0x402640</code>所存字符串为<code>“sabres”</code>。可以看出，其中对读入的字符串进行了处理，使用x2寄存器0x4025f8为首地址的字符数组进行构建。其中数组偏移量为读入字符串ASCII的二进制末4位，即十六进制末位0 - F.<br>偏移量分别为<code>7 1 13 6 5 7</code>。故ASCII十六进制末位为<code>7 1 D 6 5 7</code><br><img src="https://github.com/wangquanlikun/Blog_IMAGE/blob/main/CSAPP_Exp/ARM0502.png?raw=true" alt="ARM0502"><br>可以存在的一种情况为<code>GAMFEG</code></p><h3 id="六"><a href="#六" class="headerlink" title="六"></a>六</h3><p>相似的思路，首先查看最后进行比较的地址数据<br>得到寄存器<code>w4</code>基地址为<code>0x420000</code>，加上了<code>0x110</code>的偏移量。故查看<code>0x420110</code>处的地址信息<br><img src="https://github.com/wangquanlikun/Blog_IMAGE/blob/main/CSAPP_Exp/ARM0601.png?raw=true" alt="ARM0601"><br>成功读取到了结构体<code>node1</code>的信息<br><img src="https://github.com/wangquanlikun/Blog_IMAGE/blob/main/CSAPP_Exp/ARM0602.png?raw=true" alt="ARM0602"><br>继续向后查找可以得到其他结构体的信息<br><img src="https://github.com/wangquanlikun/Blog_IMAGE/blob/main/CSAPP_Exp/ARM0603.png?raw=true" alt="ARM0603"><br>将结构体内<code>360 – 211</code>进行比较，可以得到输入的六个数应为<code>4 3 2 1 6 5</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> CSAPP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Javascript实现获取网页反馈</title>
      <link href="/2023/09/08/Mahjong-JS/"/>
      <url>/2023/09/08/Mahjong-JS/</url>
      
        <content type="html"><![CDATA[<h2 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h2><p>&emsp;&emsp;在本人的突发奇想之下，<a href="https://github.com/wangquanlikun/Mahjong">网页版本立直麻将点数计算工具</a><strong>初版</strong>堂堂发布。与此同时，你也可以在<a href="../../../../Mahjong/"><strong>这里</strong></a>体验基础版的使用。虽然有着极其简陋的设计，单一且毫无技术水平的功能，繁杂低效的代码水平。作为本人首个基于HTML,CSS,Javascript的前端项目，本人将在此次项目中所学习到的有关上述内容的使用整理待用，一则方便自己后续的学习与使用，二则望为大佬有抛砖引玉之功效</p><h2 id="在HTML网页中插入CSS与JS脚本"><a href="#在HTML网页中插入CSS与JS脚本" class="headerlink" title="在HTML网页中插入CSS与JS脚本"></a>在HTML网页中插入CSS与JS脚本</h2><ol><li>内联方式<br>你可以在HTML文件中直接包含JS和CSS代码。这种方式适用于非常小的文件或需要在HTML中动态生成的代码。例如：</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* CSS代码 */</span></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// JavaScript代码</span></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>   这种方式的缺点是，如果你有多个页面需要使用相同的CSS或JS代码，就需要在每个页面中复制相同的代码，不便于维护。</p><ol start="2"><li>外部链接方式<br>这是最常用的方式，允许你在多个页面之间共享相同的JS和CSS文件。使用<code>&lt;link&gt;</code>元素来链接CSS文件，使用<code>&lt;script&gt;</code>元素来链接JS文件。例如：</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;styles.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;script.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在上述示例中<code>href</code>属性和<code>src</code>属性指定了CSS和JS文件的路径。<br><code>rel</code>属性定义了链接元素与当前文档之间的关系，<code>type</code>属性定义了链接资源的媒体类型（MIME 类型）<br>&emsp;<br>你可以使用相对路径或绝对路径来指定文件的位置。相对路径是相对于HTML文件的位置，而绝对路径是完整的URL路径。<br>绝对路径：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://example.com/css/styles.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://example.com/js/script.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>你还可以使用CDN来引入公共的JS和CSS库，例如jQuery、Bootstrap等。CDN通常提供高速的全球分发，减轻了服务器负载。</p><h2 id="实际应用"><a href="#实际应用" class="headerlink" title="实际应用"></a>实际应用</h2><h3 id="Ⅰ-选择框与信息获取"><a href="#Ⅰ-选择框与信息获取" class="headerlink" title="Ⅰ.选择框与信息获取"></a>Ⅰ.选择框与信息获取</h3><p><input type="checkbox" id="example001">&emsp;按钮<br>&emsp;<br>对于这样的一个按钮，你可以按下以代表确认选择，也可以再次按下取消选择<br>在HTML当中，它的简单代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;example001&quot;</span>&gt;</span>按钮</span><br></pre></td></tr></table></figure><p>在这里使用了复选框（checkbox）元素。复选框允许用户选择或取消选择一个选项，并且你可以使用JavaScript来记录用户的选择状态。其中，<code>id</code>代表了其唯一确定的关系<br>在Javascript当中，如何确定其是否已经被选择呢？</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> value001 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> checkbox001 = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;example001&quot;</span>);<span class="comment">//对应其确定的ID</span></span><br><span class="line">checkbox001.<span class="title function_">addEventListener</span>(<span class="string">&quot;change&quot;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (checkbox001.<span class="property">checked</span>) &#123;</span><br><span class="line">      value001 = <span class="number">1</span>;<span class="comment">//若选中则变量为1</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      value001 = <span class="number">0</span>;<span class="comment">//若未选中则变量为0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>通过声明的变量<code>value001</code>的数值，你可以通过后续编程实现数理逻辑的运算</p><p>如果你需要一次性操作大量的复选框识别呢？对于本工具而言，以所有一番役种为例，每个复选框在对结果的影响当中是等值的。<br>在HTML当中，对于一番役种，我们使用<code>class=&quot;checkbox-label-1fan&quot;</code>标明其属于的类。与此同时，<code>class</code>属性也可以用于CSS当中进行设计优化<br>对于前四个一番役种：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;riichi&quot;</span> <span class="attr">class</span>=<span class="string">&quot;checkbox-label-1fan&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;checkbox-label-1fan&quot;</span>&gt;</span>立直<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;yifa&quot;</span> <span class="attr">class</span>=<span class="string">&quot;checkbox-label-1fan&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;checkbox-label-1fan&quot;</span>&gt;</span>一发<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;menqianqingzimo&quot;</span> <span class="attr">class</span>=<span class="string">&quot;checkbox-label-1fan&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;checkbox-label-1fan&quot;</span>&gt;</span>门前清自摸和<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;duanyaojiu&quot;</span> <span class="attr">class</span>=<span class="string">&quot;checkbox-label-1fan&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;checkbox-label-1fan&quot;</span>&gt;</span>断幺九<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure><p>虽然其一一对应的<code>id</code>不同，但是我们注意到，其同属于一个类<code>checkbox-label-1fan</code>下。每标记一个复选框，玩家所获得的番数+1</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> value1fan = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> checkboxes1fan = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;.checkbox-label-1fan&quot;</span>);<span class="comment">//类的名称</span></span><br><span class="line">checkboxes1fan.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">checkbox</span>) &#123;</span><br><span class="line">checkbox.<span class="title function_">addEventListener</span>(<span class="string">&quot;change&quot;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (checkbox.<span class="property">checked</span>) &#123;</span><br><span class="line">        value1fan++;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        value1fan--;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;);&#125;);</span><br></pre></td></tr></table></figure><h3 id="Ⅱ-输入框与信息获取"><a href="#Ⅱ-输入框与信息获取" class="headerlink" title="Ⅱ.输入框与信息获取"></a>Ⅱ.输入框与信息获取</h3><div class="input-container"><label for="example002">输入框 &emsp;&emsp;<input type="number" id="example002"></label></div><p>对于这样的一个输入框，你可以在其中输入你想要的数值<br>在HTML当中，它的简单代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;input-container&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;example002&quot;</span>&gt;</span>输入框 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">id</span>=<span class="string">&quot;example002&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>与按钮等HTML元素一样，<code>id</code>代表了其唯一确定的关系<br><code>for</code>属性通常用于<code>&lt;label&gt;</code>元素中，用于建立与表单元素之间的关联。当你在<code>&lt;label&gt;</code>元素中使用<code>for</code>属性，并将其值设置为表单元素的<code>id</code>属性的值时，单击<code>&lt;label&gt;</code>元素的文本或标签本身将会触发关联的表单元素。</p><p>如何使用JavaScript来获取和记录用户输入的值呢？如示例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title class_">InputValue</span>;</span><br><span class="line"><span class="title class_">InputValue</span> = <span class="built_in">parseInt</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;example002&quot;</span>).<span class="property">value</span>)</span><br></pre></td></tr></table></figure><p>其中，<code>parseInt()</code>用于确保将其转换成整型以确保是数字</p><p>若用户不需要输入任何数值，则默认状态下其值为空。为确保算术运算准确，你可以在JS当中，将其初始值赋值为0</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;example002&quot;</span>).<span class="property">value</span> = <span class="number">0</span>;</span><br></pre></td></tr></table></figure><h3 id="Ⅲ-多重选择项与信息获取"><a href="#Ⅲ-多重选择项与信息获取" class="headerlink" title="Ⅲ.多重选择项与信息获取"></a>Ⅲ.多重选择项与信息获取</h3><select id="example003" name="example003">    <option value="loli">萝莉</option>    <option value="younggirl">幼女</option></select><p>对于如上选择框，你可以在有限多项当中选择一项</p><select id="example004" name="example004" multiple>    <option value="01">萝莉</option>    <option value="02">幼女</option>    <option value="03">JS</option>    <option value="04">JK</option></select><p>用户可以按住<code>Ctrl</code>键（在Windows系统上）或<code>Command</code>键（在Mac系统上）来多选多个选项</p><p>对于其在HTML当中的使用：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;example004&quot;</span> <span class="attr">name</span>=<span class="string">&quot;example004&quot;</span> <span class="attr">multiple</span>&gt;</span>//删去multiple属性改为单选</span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;01&quot;</span>&gt;</span>萝莉<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;02&quot;</span>&gt;</span>幼女<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;03&quot;</span>&gt;</span>JS<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;04&quot;</span>&gt;</span>JK<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在上面的示例中，我们使用<code>&lt;select&gt;</code>元素来创建一个下拉菜单，添加<code>multiple</code>属性允许多选。然后，我们使用<code>&lt;option&gt;</code>元素列出了可供选择的选项，每个选项都有一个<code>value</code>属性，它是在提交表单时将被发送的值，以及显示在下拉菜单中的文本。</p><p>在JavaScript中获取用户所选择的数值：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> selectElement = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;example004&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> selectedValue = selectElement.<span class="property">value</span>;</span><br><span class="line"><span class="keyword">var</span> resultValue;</span><br><span class="line">       </span><br><span class="line"><span class="keyword">if</span> (selectedValue === <span class="string">&quot;01&quot;</span>)</span><br><span class="line">    resultValue = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (selectedValue === <span class="string">&quot;02&quot;</span>)</span><br><span class="line">    resultValue = <span class="number">2</span>;</span><br></pre></td></tr></table></figure><h3 id="Ⅳ-表格项选择框"><a href="#Ⅳ-表格项选择框" class="headerlink" title="Ⅳ.表格项选择框"></a>Ⅳ.表格项选择框</h3><style>    th, td {        padding: 10px;        cursor: pointer;    }    th:hover, td.selected {        background-color: #3498db;        color: white;    }</style><table id="table1">    <tr>        <td data-number="20">20</td>        <td data-number="25">25</td>        <td data-number="30">30</td>        <td data-number="40">40</td>        <td data-number="50">50</td>    </tr></table><script>        const table1Cells = document.querySelectorAll('#table1 td');        let selectedNumberTable1 = null;        table1Cells.forEach(cell => {            cell.addEventListener('click', () => {                if (selectedNumberTable1) {                    selectedNumberTable1.classList.remove('selected');                }                cell.classList.add('selected');                selectedNumberTable1 = cell;                const numberValue = parseInt(cell.getAttribute('data-number'));            });        });</script><p>对于这样的一个选择项，我们可以直接点击选择，并且反馈点击的结果。同时，可以通过Javascript直接获取点击数据，并对其加以处理</p><p>在HTML当中，我们写入如下内容：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">&quot;table1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">data-number</span>=<span class="string">&quot;20&quot;</span>&gt;</span>20<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">data-number</span>=<span class="string">&quot;25&quot;</span>&gt;</span>25<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">data-number</span>=<span class="string">&quot;30&quot;</span>&gt;</span>30<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">data-number</span>=<span class="string">&quot;40&quot;</span>&gt;</span>40<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">data-number</span>=<span class="string">&quot;50&quot;</span>&gt;</span>50<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我们需要CSS规定其格式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.table-container</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">table</span> &#123;</span><br><span class="line">    <span class="attribute">border-collapse</span>: collapse;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">table</span>, <span class="selector-tag">th</span>, <span class="selector-tag">td</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">th</span>, <span class="selector-tag">td</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">th</span><span class="selector-pseudo">:hover</span>, <span class="selector-tag">td</span><span class="selector-class">.selected</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#3498db</span>;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还需要通过Javascript实现检测点击，反馈点击的结果，以及获取点击数据。其中，<code>table1</code>在这里是使其唯一确定的id</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> table1Cells = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;#table1 td&#x27;</span>);</span><br><span class="line">        </span><br><span class="line"><span class="keyword">let</span> selectedNumberTable1 = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">table1Cells.<span class="title function_">forEach</span>(<span class="function"><span class="params">cell</span> =&gt;</span> &#123;</span><br><span class="line">cell.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (selectedNumberTable1) &#123;</span><br><span class="line">        selectedNumberTable1.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;selected&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">                </span><br><span class="line">    cell.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;selected&#x27;</span>);</span><br><span class="line">    selectedNumberTable1 = cell;</span><br><span class="line">    <span class="keyword">const</span> numberValue = <span class="built_in">parseInt</span>(cell.<span class="title function_">getAttribute</span>(<span class="string">&#x27;data-number&#x27;</span>));</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>在这里，我们通过变量<code>numberValue</code>获取整型读取的点击数据<code>data-number</code></p><h3 id="Ⅴ-确定按钮"><a href="#Ⅴ-确定按钮" class="headerlink" title="Ⅴ.确定按钮"></a>Ⅴ.确定按钮</h3><p><button onclick="recordInput()">确定</button></p><p>你可以使用如下HTML来构建一个确定按钮：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;recordInput()&quot;</span>&gt;</span>确定<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>当按下按钮后，将执行<code>recordInput()</code>函数</p><p>在Javascript当中：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">recordInput</span>(<span class="params"></span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*执行函数*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以执行函数下的指令</p><h3 id="Ⅵ-JS数理逻辑的运算"><a href="#Ⅵ-JS数理逻辑的运算" class="headerlink" title="Ⅵ.JS数理逻辑的运算"></a>Ⅵ.JS数理逻辑的运算</h3><p>&emsp;&emsp;对于立直麻将的符数，求和后对结果进行切上处理，即向上舍入，即个位不是零，则个位变成零，整体加10<br>&emsp;&emsp;与此同时，对于点数，由于日麻点棒的最低计算单位为100，当计算得出总支付点数后，还需要进行切上处理，即十位非零时置为零，百位加一</p><p>在Javascript当中，对于算出的单位点数<code>get_a</code>，庄家自摸，子家每人支付2a的点数，并进行切上处理：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Math</span>.<span class="title function_">ceil</span>((<span class="number">2</span>*<span class="built_in">parseInt</span>(get_a))/<span class="number">100</span>)*<span class="number">100</span></span><br></pre></td></tr></table></figure><p><code>parseInt()</code>用于确保将其转换成整型以确保是数字。在Javascript当中，<code>var</code>作为动态类型，你可可以进行诸如字符串的运算</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yiman+<span class="string">&quot;倍役满&quot;</span></span><br></pre></td></tr></table></figure><h3 id="Ⅶ-实现网页信息反馈"><a href="#Ⅶ-实现网页信息反馈" class="headerlink" title="Ⅶ.实现网页信息反馈"></a>Ⅶ.实现网页信息反馈</h3><p>在HTML当中，你可以使用如下方式，表示接下来需要显示的内容：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;example005&quot;</span>&gt;</span><span class="symbol">&amp;emsp;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在Javascript当中，你可以使用如下方式，显示在HTML页面当中：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;example005&quot;</span>).<span class="property">textContent</span> = <span class="string">&quot;测试&quot;</span>;<span class="comment">//文字</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;example005&quot;</span>).<span class="property">textContent</span> = <span class="built_in">parseInt</span>(fan);<span class="comment">//数字</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;example005&quot;</span>).<span class="property">innerHTML</span> = <span class="string">&quot;&amp;emsp;&quot;</span>;<span class="comment">//HTML实体</span></span><br></pre></td></tr></table></figure><h2 id="JS脚本的部分语法使用"><a href="#JS脚本的部分语法使用" class="headerlink" title="JS脚本的部分语法使用"></a>JS脚本的部分语法使用</h2><h3 id="var与let类型-——From-ChatGPT"><a href="#var与let类型-——From-ChatGPT" class="headerlink" title="var与let类型 ——From ChatGPT"></a>var与let类型 ——From ChatGPT</h3><p>在JavaScript中，<code>let</code>和<code>var</code>都用于声明变量，但它们在变量作用域和生命周期方面有一些重要的区别。</p><ol><li><p><strong><code>let</code>：</strong></p><ul><li><code>let</code>是ECMAScript 6（ES6）引入的关键字。</li><li>声明的变量使用<code>let</code>具有块级作用域，这意味着它们只在包含它们的代码块（通常是 <code>&#123;&#125;</code> 中）内可见。</li><li>使用<code>let</code>声明的变量不会被提升（hoisting），在声明之前访问它们会导致引发暂时性死区（Temporal Dead Zone，TDZ）错误。</li><li><code>let</code>声明的变量可以被重新赋值。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> x = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> x = <span class="number">20</span>; <span class="comment">// 在此块级作用域内重新声明 x</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(x); <span class="comment">// 输出 20</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(x); <span class="comment">// 输出 10</span></span><br></pre></td></tr></table></figure></li><li><p><strong><code>var</code>：</strong></p><ul><li><code>var</code>是早期版本的JavaScript中使用的关键字。</li><li>使用<code>var</code>声明的变量具有函数级作用域，而不是块级作用域，这意味着它们在包含它们的函数内可见。</li><li><code>var</code>声明的变量会被提升，这意味着变量的声明会被提升到其所在函数或全局作用域的顶部。</li><li><code>var</code>声明的变量可以被重新赋值。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> y = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> y = <span class="number">20</span>; <span class="comment">// 在函数级作用域内重新赋值 y</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(y); <span class="comment">// 输出 20</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(y); <span class="comment">// 输出 20，而不是 10</span></span><br></pre></td></tr></table></figure></li></ol><p>总之，<code>let</code>和<code>var</code>都用于声明变量，但由于<code>let</code>具有块级作用域、不会被提升以及更严格的变量处理，它通常被认为是更安全和更可预测的选项，尤其是在现代JavaScript中。因此，在编写新代码时，通常建议使用<code>let</code>而不是<code>var</code>。</p><h2 id="立直麻将点数计算相关"><a href="#立直麻将点数计算相关" class="headerlink" title="立直麻将点数计算相关"></a>立直麻将点数计算相关</h2><p>参考<a href="https://zh.moegirl.org.cn/%E6%97%A5%E6%9C%AC%E9%BA%BB%E5%B0%86/%E7%B4%A0%E7%82%B9">萌娘百科/日本麻将/素点</a></p><p>单位点数(a) = 符数 × 2<sup>(2+番数)</sup></p><p>大于等于5番时，单位点数固定：</p><table><thead><tr><th>番数</th><th>名称</th><th>a</th></tr></thead><tbody><tr><td>5番</td><td>满贯</td><td>2000</td></tr><tr><td>6~7番</td><td>跳满</td><td>3000</td></tr><tr><td>8~10番</td><td>倍满</td><td>4000</td></tr><tr><td>11~12番</td><td>三倍满</td><td>6000</td></tr><tr><td>13番</td><td>役满</td><td>8000</td></tr></tbody></table><p>根据身份与和牌方式的不同，和牌时以a为基准进行如下赔付结算：</p><table><thead><tr><th>身份</th><th>点和</th><th>自摸</th></tr></thead><tbody><tr><td>亲</td><td>放铳者支付6a</td><td>每人2a</td></tr><tr><td>子</td><td>放铳者支付4a</td><td>亲支付2a，子支付a</td></tr></tbody></table><p>由于日麻点棒的最低计算单位为100，当计算得出总支付点数后，还需要进行切上处理，即十位非零时置为零，百位加一</p>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习笔记：图形化与C++多线程</title>
      <link href="/2023/05/09/C-Multithreading/"/>
      <url>/2023/05/09/C-Multithreading/</url>
      
        <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>&emsp;&emsp;计算导论与程序设计课的期末作业是分别设计OJ版本与图形化版本的扫雷游戏。截止到目前已经完成OJ版项目的开发，对于图形化版本也已经基本实现了基础的游戏功能。因此想要浅谈一下最近学习到的新技能。<br>&emsp;&emsp;由于课程设计作业的查重要求，我不会具体描写部分代码功能的具体实现。记录开发过程与程序源代码的<a href="https://github.com/wangquanlikun/Minesweeper">Github仓库</a>将会在所有作业完成截止后设置为开放。 <del>当然，我相信不会有人来看我的垃圾代码的</del></p><h2 id="图形化界面"><a href="#图形化界面" class="headerlink" title="图形化界面"></a>图形化界面</h2><p>&emsp;&emsp;由于本人能力有限，因此在开发时选择了较为简单的<strong>EasyX</strong>进行开发。官方文档可以在<a href="https://docs.easyx.cn/zh-cn/intro">这里</a>查看</p><p>我们可以看到，对于最基本的程序框架来说：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;graphics.h&gt;</span>   <span class="comment">// 引用图形库头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">initgraph</span>(<span class="number">640</span>, <span class="number">480</span>);    <span class="comment">// 创建绘图窗口，大小为 640x480 像素</span></span><br><span class="line">    <span class="comment">/****</span></span><br><span class="line"><span class="comment">    进行其它操作</span></span><br><span class="line"><span class="comment">    *****/</span></span><br><span class="line">    <span class="built_in">closegraph</span>();   <span class="comment">// 关闭绘图窗口</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于其对于窗口的操作是单图层覆盖的模式，因此需要留意写入造成的影响与写入前后的擦除</p><h3 id="对于背景的操作"><a href="#对于背景的操作" class="headerlink" title="对于背景的操作"></a>对于背景的操作</h3><p>使用<code>setbkcolor(0xE7EFDE)</code>设置背景颜色为0xE7EFDE（16进制颜色）<br>使用<code>setbkmode(TRANSPARENT)</code>设置图案填充和文字输出时的背景模式为透明（默认为用当前背景色填充，在其它图像上输出时会有覆盖）<br>使用<code>cleardevice()</code>清楚屏幕所有绘制</p><p>使用<code>clearrectangle(left,top,right,bottom)</code>以上下左右位置清除长方形区域的绘制</p><h3 id="输出图像"><a href="#输出图像" class="headerlink" title="输出图像"></a>输出图像</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setlinecolor</span>(<span class="number">0x332300</span>);  <span class="comment">//设置线条颜色</span></span><br><span class="line"><span class="built_in">setlinestyle</span>(PS_SOLID | PS_ENDCAP_FLAT, <span class="number">2</span>);  <span class="comment">//设置线条绘制模式为 线形为实线 端点为平坦</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">rectangle</span>(left,top,right,bottom);  <span class="comment">//以上下左右位置坐标画长方形（无填充）</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">setfillcolor</span>(WHITE);  <span class="comment">//设置填充颜色</span></span><br><span class="line"><span class="built_in">fillrectangle</span>(left,top,right,bottom);  <span class="comment">//绘制有填充的矩形</span></span><br></pre></td></tr></table></figure><h3 id="输出文字"><a href="#输出文字" class="headerlink" title="输出文字"></a>输出文字</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">TCHAR start[] = _T(<span class="string">&quot;开始游戏&quot;</span>);</span><br><span class="line"><span class="built_in">settextstyle</span>(<span class="number">30</span> , <span class="number">0</span>, _T(<span class="string">&quot;微软雅黑&quot;</span>));   <span class="comment">//设置当前字体为高 30 像素的“微软雅黑”</span></span><br><span class="line"><span class="built_in">settextcolor</span>(BLACK);    <span class="comment">//设置输出文字颜色</span></span><br><span class="line"><span class="built_in">outtextxy</span>(x , y , start);   <span class="comment">//在(x,y)坐标输出自适应字符集start记录的字符串</span></span><br></pre></td></tr></table></figure><h4 id="以整形数字输出"><a href="#以整形数字输出" class="headerlink" title="以整形数字输出"></a>以整形数字输出</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">printnum</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> printnum)</span><span class="comment">//在x,y位置输出数字&#x27;printnum&#x27;</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TCHAR s[<span class="number">8</span>];</span><br><span class="line">    _stprintf_s(s, _T(<span class="string">&quot;%d&quot;</span>), printnum);</span><br><span class="line">    <span class="built_in">outtextxy</span>(x, y, s);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="读取鼠标操作"><a href="#读取鼠标操作" class="headerlink" title="读取鼠标操作"></a>读取鼠标操作</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ExMessage m;    <span class="comment">// 定义消息变量</span></span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">    m = <span class="built_in">getmessage</span>(EX_MOUSE | EX_KEY);  <span class="comment">// 获取一条鼠标或按键消息</span></span><br><span class="line">    <span class="comment">//识别对应鼠标或按键，以及对应的操作</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>ExMessage</code>这个结构体用于保存鼠标消息</p><ul><li><p>示例（声明<code>ExMessage m;</code>）：</p><p>  鼠标左键按下<code>m.lbutton == true</code><br>  鼠标的 x 坐标<code>m.x</code></p><p>  或者使用<code>message</code>获取消息标识<br>  <code>m.message == WM_LBUTTONDOWN</code> 左键按下消息<br>  <code>m.message == WM_LBUTTONUP</code> 左键弹起消息</p></li></ul><h2 id="C-实现多线程"><a href="#C-实现多线程" class="headerlink" title="C++实现多线程"></a>C++实现多线程</h2><p>以C++多线程实现计时器操作为例：</p><p>函数本体：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;thread&gt;</span>   <span class="comment">//多线程</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;chrono&gt;</span>   <span class="comment">//计时器</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printusetime</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> minutes = <span class="number">0</span>;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> seconds = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        std::this_thread::<span class="built_in">sleep_for</span>(std::chrono::<span class="built_in">seconds</span>(<span class="number">1</span>));   <span class="comment">//等待1秒</span></span><br><span class="line">        seconds++;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (seconds &gt;= <span class="number">60</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            minutes ++;</span><br><span class="line">            seconds = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!timecontinue)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中，<code>timecontinue</code>是<code>bool</code>类型的全局变量，用于在外部控制此线程结束的标识</p><p>在主函数当中，使用<code>std::thread timecutdown(printusetime)</code>开启该进程，使用<code>timecutdown.join()</code>函数等待子线程结束后，主线程才会继续执行并退出</p>]]></content>
      
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>有限状态自动机去除C语言注释</title>
      <link href="/2023/04/20/remove_C_note/"/>
      <url>/2023/04/20/remove_C_note/</url>
      
        <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>&emsp;&emsp;C语言的注释分为两种，第一种：在一行源代码中“<code>//</code>”后的内容为注释内容。第二种:“<code>/</code><em>”与“</em><code>/</code>”之间的内容为注释内容。第三种：程序中只出现了“<code>/*</code>”，没有“<code>*/</code>”与之对应，那么将“<code>/*</code>”后的全部内容都要过滤掉。注意，只要是注释内容，那么注释内容中的字符应该全部忽略，即不起任何的作用。例如“<code>/*</code>”与“<code>*/</code>”之间如果再有“<code>//</code>”，那么“<code>//</code>”不应起作用；如果“<code>//</code>”再有“<code>/*</code>”，那么“<code>/*</code>”也不应起作用。<br>&emsp;&emsp;你的任务是先打开一个名字为<code>dict.dic</code>的文本文件，该文件中前5行每行为1个整数，从第6行开始为5段C语言的源代码。那5个数字代表这5段源代码结束的行数，比如如果第一行的整数为20，第二行的整数为60，则表示从第6行到第20为第一段代码，从第21行到第60为第二段代码。然后根据输入要求将源代码中所有注释过滤掉。</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><h3 id="有限状态"><a href="#有限状态" class="headerlink" title="有限状态"></a>有限状态</h3><p>对于有限状态自动机的解法：列举出有限状态</p><ul><li>正常读入代码内容：直接输出。对于该题而言，一段代码处理开始</li><li>读入<code>//</code>后的注释内容：忽略，直到匹配的<code>\n</code>换行符出现截至（忽略<code>/*</code>的作用）</li><li>读入<code>/*</code>后的注释内容：忽略，直到匹配的<code>*/</code>出现。若不出现则后面全为注释（忽略<code>//</code>的作用）</li><li>停止读入代码：对于该题而言，一段代码处理结束</li></ul><p>同时，设计不同状态之间的转换关系：</p><ul><li>正常读入<br>1.读入<code>/</code>后：<br>&emsp;①继续读入<code>/</code>，进入<code>//</code>注释模式<br>&emsp;②继续读入<code>*</code>，进入<code>/*</code>注释模式<br>&emsp;③读入其他字符，则<code>/</code>也是代码内容，注意输出</li><li><code>/*</code>注释模式<br>1.读入<code>*</code>后：<br>&emsp;①继续读入<code>/</code>，结束<code>/*</code>注释模式<br>&emsp;②继续读入<code>*</code>，维持读入<code>*</code>后模式<br>&emsp;③读入其他字符，维持<code>/*</code>注释模式</li></ul><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">filroperation</span><span class="params">(FILE *fPtr,<span class="type">int</span> a[<span class="number">5</span>])</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    FILE *fPtr;</span><br><span class="line">    fPtr = fopen(<span class="string">&quot;dict.dic&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">    rewind(fPtr);<span class="comment">//文件指针复位</span></span><br><span class="line">    <span class="type">int</span> a[<span class="number">5</span>];<span class="comment">//5个数字代表这5段源代码结束的行数</span></span><br><span class="line">    <span class="type">int</span> k;</span><br><span class="line">    <span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; <span class="number">5</span>;k++)</span><br><span class="line">        <span class="built_in">fscanf</span>(fPtr, <span class="string">&quot;%d&quot;</span>, &amp;a[k]);</span><br><span class="line">    filroperation(fPtr,a);</span><br><span class="line">    fclose(fPtr);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">filroperation</span><span class="params">(FILE *fPtr,<span class="type">int</span> a[<span class="number">5</span>])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> line = <span class="number">6</span>, i = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> printnum;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;printnum);<span class="comment">//输出第几组代码</span></span><br><span class="line">    <span class="type">char</span> c;</span><br><span class="line">    <span class="type">int</span> p = <span class="number">0</span>;<span class="comment">//p=1意味着在/**/之间，p=2意味着在//之后</span></span><br><span class="line">    <span class="type">int</span> k = <span class="number">0</span>;<span class="comment">//k=1意味着已经读入了一个/</span></span><br><span class="line">    fgetc(fPtr);</span><br><span class="line">    c = fgetc(fPtr);</span><br><span class="line">    <span class="keyword">while</span>(!feof(fPtr))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(c==<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            line++;</span><br><span class="line">        <span class="keyword">if</span>(line==a[i]+<span class="number">1</span>)<span class="comment">//这一组代码读完了</span></span><br><span class="line">        &#123;</span><br><span class="line">            i++;</span><br><span class="line">            <span class="keyword">if</span>(printnum==i+<span class="number">1</span>)</span><br><span class="line">                c = fgetc(fPtr);</span><br><span class="line">            <span class="keyword">if</span>(k==<span class="number">1</span>&amp;&amp;c==<span class="string">&#x27;\n&#x27;</span>&amp;&amp;printnum==i)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;/%c&quot;</span>, c);</span><br><span class="line">            &#125;</span><br><span class="line">            k = <span class="number">0</span>;</span><br><span class="line">            p = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i+<span class="number">1</span>&gt;printnum)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(p==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(k==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(c!=<span class="string">&#x27;/&#x27;</span>&amp;&amp;printnum==i+<span class="number">1</span>)</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, c);</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(c==<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">                    k = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(k==<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(c==<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    k = <span class="number">0</span>;</span><br><span class="line">                    p = <span class="number">2</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(c==<span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    k = <span class="number">0</span>;</span><br><span class="line">                    p = <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    k = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">if</span>(printnum==i+<span class="number">1</span>)</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;/%c&quot;</span>,c);<span class="comment">//has read‘/’但是不匹配的情况，比如a/b的使用等</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(p==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(k==<span class="number">0</span>&amp;&amp;c==<span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">                k = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(k==<span class="number">1</span>&amp;&amp;c==<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                p = <span class="number">0</span>;</span><br><span class="line">                k = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(k==<span class="number">1</span>&amp;&amp;c==<span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">                k = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(k==<span class="number">1</span>&amp;&amp;c!=<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">                k = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(p==<span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(c==<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                p = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">if</span>(printnum==i+<span class="number">1</span>)</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        c = fgetc(fPtr);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习笔记：C文件操作</title>
      <link href="/2023/03/24/C-Files/"/>
      <url>/2023/03/24/C-Files/</url>
      
        <content type="html"><![CDATA[<h2 id="文件流"><a href="#文件流" class="headerlink" title="文件流"></a>文件流</h2><h3 id="标准输入流、标准输出流、标准错误流"><a href="#标准输入流、标准输出流、标准错误流" class="headerlink" title="标准输入流、标准输出流、标准错误流"></a>标准输入流、标准输出流、标准错误流</h3><ol><li>标准输入流：指向终端输入（一般为键盘，可重定向）。该流能够使程序读取来自终端输入的数据。<br>指针：<code>stdin</code></li><li>标准输出流：指向终端输出（一般为显示器，可重定向）。该流能够使程序把数据打印到终端输出上。<br>指针：<code>stdout</code></li><li>标准错误流：指向终端标准错误输出（一般为显示器）。<br>指针：<code>stderr</code></li></ol><h3 id="输入输出重定向"><a href="#输入输出重定向" class="headerlink" title="输入输出重定向"></a>输入输出重定向</h3><p>将标准输入设备重定向到data1.txt文件，标准输出设备重定向到data2.txt文件：<br>CMD <code>test &lt;data1.txt &gt;data2.txt</code></p><h2 id="文件的打开与关闭"><a href="#文件的打开与关闭" class="headerlink" title="文件的打开与关闭"></a>文件的打开与关闭</h2><h3 id="缓冲文件系统"><a href="#缓冲文件系统" class="headerlink" title="缓冲文件系统"></a>缓冲文件系统</h3><p>系统自动地在内存区为程序中每一个正在使用的文件开辟一个文件缓冲区</p><p><code>int fflush(FILE *fPtr);</code></p><ul><li>清理一个文件的缓冲区。</li><li>参数<code>fPtr</code>是打开文件时由<code>fopen()</code>函数返回的FILE指针。</li><li>对于以写方式打开的文件，函数将缓冲区中的数据写入磁盘文件。</li><li>对于以读方式打开的文件，函数将缓冲区清空。</li></ul><p><code>int flushall(void);</code></p><ul><li>用于清理所有文件的缓冲区。</li><li>返回打开着的文件个数。</li></ul><h3 id="FILE类型"><a href="#FILE类型" class="headerlink" title="FILE类型"></a>FILE类型</h3><p>C系统为了处理文件，给每个打开的文件都在内存中开辟一片区域，用于存放文件的有关信息<br>FILE类型由系统定义（见<code>&lt;stdio.h&gt;</code>）<br>用法：<code>FILE * fPtr;</code> 用fPtr指向要操作的文件</p><h3 id="对文件的操作"><a href="#对文件的操作" class="headerlink" title="对文件的操作"></a>对文件的操作</h3><p>打开文件－&gt;读或写文件－&gt;关闭文件</p><h4 id="Ⅰ-文件的打开"><a href="#Ⅰ-文件的打开" class="headerlink" title="Ⅰ.文件的打开"></a>Ⅰ.文件的打开</h4><p><code>fopen()</code>函数<br>打开以filename所指向的字符串为文件名的文件，使之与一个流关联。返回一个指向FILE类型结构变量的指针<br><code>fPtr = fopen (“clients.dat”,“w”);</code> //文件和程序在同一目录<br><code>fPtr = fopen (“C:\\temp\\clients.dat”,“w”);</code> //文件绝对路径。</p><h5 id="打开文件的操作方式"><a href="#打开文件的操作方式" class="headerlink" title="打开文件的操作方式"></a>打开文件的操作方式</h5><ul><li>r:打开一个文本文件，可以读取文件</li><li>w:打开一个文本文件，可以写入文件（但会先删除文件原内容）。如果文件不存在，则创建。</li><li>a:打开一个文本文件，可以写入文件，向已有文件的尾部追加内容，如果该文件不存在则创建之</li><li>rb/wb/ab:对二进制文件的操作。r、w、a的含义同ASCII文件操作</li></ul><h4 id="Ⅱ-文件的关闭"><a href="#Ⅱ-文件的关闭" class="headerlink" title="Ⅱ.文件的关闭"></a>Ⅱ.文件的关闭</h4><p><code>fcolse()</code>函数<br><code>fclose(fPtr);</code> //关闭fPtr所指向的文件</p><h2 id="文件指针"><a href="#文件指针" class="headerlink" title="文件指针"></a>文件指针</h2><p>文件中有一个“文件位置指针”，指向下一次读写操作所在字节的整数值。每次读写1个（或1组）数据后，系统自动将文件位置指针移动到下一个读写位置上<br>打开文件时位置指针的起始位置与打开文件的方式有关</p><p><code>rewind()</code>：文件位置指针指向文件头</p><p><code>fseek()</code>:修改文件位置指针使其指向任一字节处</p><ul><li>将指定文件的位置指针，从参照点开始，移动指定的字节数（位移量）</li><li>参照点:<br>SEEK_SET ── 值为0，表示文件头<br>SEEK_CUR ── 值为1，表示当前位置<br>SEEK_END ── 值为2，表示文件尾</li><li>位移量：以参照点为起点，向文件尾方向（位移量&gt;０）或文件头方向（位移量&lt;０）移动的字节数</li></ul><p><code>ftell()</code>：返回文件当前位置的函数</p><h2 id="文件读取"><a href="#文件读取" class="headerlink" title="文件读取"></a>文件读取</h2><h3 id="判断文件是否读到文件尾"><a href="#判断文件是否读到文件尾" class="headerlink" title="判断文件是否读到文件尾"></a>判断文件是否读到文件尾</h3><p>在对ASCII码文件执行读入操作时，如果遇到文件尾，则读操作函数返回一个文件结束标志EOF（其值在头文件<code>stdio.h</code>中被定义为-1）</p><p>库函数<code>feof()</code><br><code>int  feof(FILE *stream);</code><br>在执行读文件操作时，如果遇到文件尾，则函数返回逻辑真（1）；否则，则返回逻辑假（0）。feof()函数同时适用于ASCII码文件和二进制文件<br><code>!feof(fPtr)</code>表示源文件（用于输入）未结束，循环继续</p><h3 id="Ⅰ-读／写文件中的一个字符（文本文件）"><a href="#Ⅰ-读／写文件中的一个字符（文本文件）" class="headerlink" title="Ⅰ.读／写文件中的一个字符（文本文件）"></a>Ⅰ.读／写文件中的一个字符（文本文件）</h3><p><code>fputc()</code> 将一个字符写入指定文件<br><code>int fputc(int c， FILE *stream);</code><br>将c所指定字符写入stream所指向的输出流中<br><code>fputc(c,stdout)</code>等价于<code>putchar(c)</code>，将变量c输出到标准输出设备上</p><p><code>fgetc()</code> 从指定文件读取一个字符<br>从stream所指向的输入流中获取下一个unsigned char类型的字符，并转换成int类型，同时将文件位置指针向前移动1个字节<br><code>ch=fgetc(stdin)</code>等价于<code>ch=getchar()</code>，从标准输入流中读取一个字符</p><h3 id="Ⅱ-读／写一个字符串（文本文件）"><a href="#Ⅱ-读／写一个字符串（文本文件）" class="headerlink" title="Ⅱ.读／写一个字符串（文本文件）"></a>Ⅱ.读／写一个字符串（文本文件）</h3><p><code>fputs()</code> 向文本文件输出一个字符串<br><code>int fputs(const char *s，FILE * stream);</code><br>将s所指向的字符串写入stream所指向的流中(‘\0’不被写入)。同时将文件位置指针向前移动字符串长度个字节,指向下一写入位置<br><code>fputs(s, stdout)</code>等价于<code>puts(s)</code>，将s所指向的字符串写入到标准输出流</p><p><code>fgets()</code> 从文本文件读一个字符串<br><code>char * fgets(char * s，int n，FILE * stream);</code><br>从stream指向的流中读取最多n－1个字符并放到s所指向的数组中，遇到下面情况不再往后读：</p><ol><li>读到新行符‘\n’或者文件结束符（新行符会被读入到s）</li><li>或虽未遇新行符和文件结束符、但已读入n-1个字符。</li></ol><p>最后一个字符读入数组后接着写入结束标志<code>&#39;\0&#39;</code> ，并将文件位置指针向前移动n－1（字符串长度）个字节</p><h3 id="Ⅲ-对文件进行格式化读／写（文本文件）"><a href="#Ⅲ-对文件进行格式化读／写（文本文件）" class="headerlink" title="Ⅲ.对文件进行格式化读／写（文本文件）"></a>Ⅲ.对文件进行格式化读／写（文本文件）</h3><p><code>int  fscanf(FILE * stream，const char * format，输入变量首地址表);</code><br><code>fscanf(stdin,&quot;%d&quot;,&amp;input);</code></p><p><code>int  fprintf(FILE * stream，const char * format ，输出参量表);</code></p><h3 id="Ⅳ-读／写一个数据块（二进制文件）"><a href="#Ⅳ-读／写一个数据块（二进制文件）" class="headerlink" title="Ⅳ.读／写一个数据块（二进制文件）"></a>Ⅳ.读／写一个数据块（二进制文件）</h3><p><code>int  fread(void *buffer，int size，int count，FILE * stream);</code><br>从<code>stream</code>所指向的流中读取数据到<code>buffer</code>所指向的数组中，<code>size</code>表示单个数组元素的大小，最多读取<code>count</code>个数组元素，流的文件位置指针根据成功写入的字节数递增。函数返回成功读入的元素个数。</p><p><code>int  fwrite(void *buffer，int size，int count，FILE * stream);</code><br>将<code>buffer</code>所指向的数组的内容写入<code>stream</code>所指向的流中。<code>size</code>表示单个数组元素的大小，最多写入<code>count</code>个数组元素。流的文件位置指针根据成功写入的字节数递增。函数返回成功写入的元素个数。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用CSS实现隐藏汉字黑框</title>
      <link href="/2023/03/18/css-moegirl/"/>
      <url>/2023/03/18/css-moegirl/</url>
      
        <content type="html"><![CDATA[<p><span title="你知道的太多了" class="heimu">本文参考ChatGPT的回答整理 (￣y▽,￣)╭</span></p><h2 id="在基于Hexo创建的个人博客当中管理CSS文件"><a href="#在基于Hexo创建的个人博客当中管理CSS文件" class="headerlink" title="在基于Hexo创建的个人博客当中管理CSS文件"></a>在基于Hexo创建的个人博客当中管理CSS文件</h2><h3 id="1-修改通用的styl文件"><a href="#1-修改通用的styl文件" class="headerlink" title="1.修改通用的styl文件"></a>1.修改通用的styl文件</h3><p>&emsp;&emsp;在<code>/themes/your-theme-name/source/css/</code>目录下有多个styl文件，这些文件通常是由Stylus编写的CSS预处理器文件，最终生成的CSS文件将用于渲染你的网站<br>&emsp;&emsp;如果你希望在所有页面中使用这个效果，你可以修改主题的CSS文件，将上面的CSS代码添加到其中任意一个CSS文件即可。通常，你应该将代码添加到主题的<code>style.styl</code>文件中，因为它是所有CSS文件的入口文件，可以确保你的代码能够被正确地应用到整个网站中。但是，你也可以根据需要选择其他的CSS文件进行修改</p><h3 id="2-创建单独的css文件"><a href="#2-创建单独的css文件" class="headerlink" title="2.创建单独的css文件"></a>2.创建单独的css文件</h3><p>&emsp;&emsp;如果你只想针对某个页面或者某个特定的Markdown文件添加黑色方块隐藏文字的效果，你可以在该Markdown文件的Front-matter区块中指定一个单独的CSS文件。<br>&emsp;&emsp;例如，在你的Markdown文件中添加如下Front-matter：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: My blog post</span><br><span class="line">date: 2023-03-18</span><br><span class="line">tags: [Hexo, CSS]</span><br><span class="line">css: /css/my-custom.css</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;在这个例子中，我们指定了一个名为<code>my-custom.css</code>的CSS文件，它应该位于你的主题CSS文件夹中（通常是<code>/themes/your-theme-name/source/css/</code>目录下）。<br>&emsp;&emsp;然后，你可以在<code>my-custom.css</code>文件中添加你希望加入的CSS代码</p><h2 id="HTML-span-的使用"><a href="#HTML-span-的使用" class="headerlink" title="HTML span 的使用"></a>HTML span 的使用</h2><p>HTML的<code>&lt;span&gt;</code>元素用于为文本或其他元素添加样式，而不影响布局。具体来说，<code>&lt;span&gt;</code>元素只是一个用于包装文本的容器，可以在其中添加样式或应用其他属性，例如<code>id</code>或<code>class</code><br>以下是<code>&lt;span&gt;</code>元素的示例用法：</p><ol><li><p>将一段文本标记为特定样式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一段<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;highlighted-text&quot;</span>&gt;</span>突出显示的文本<span class="tag">&lt;/<span class="name">span</span>&gt;</span>。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在上面的示例中，<code>&lt;span&gt;</code>元素被用来将文本标记为<code>&quot;highlighted-text&quot;</code>类，以便可以在CSS中定义该类的样式。</p></li><li><p>应用多个属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span> <span class="attr">class</span>=<span class="string">&quot;red bold&quot;</span>&gt;</span>John<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在上面的示例中，<code>&lt;span&gt;</code>元素被用于显示用户的用户名，并应用了<code>id</code>和<code>class</code>属性，以便可以通过CSS或JavaScript针对该元素进行样式或操作。</p></li></ol><p>总之，<code>&lt;span&gt;</code>元素是一个非常常用的HTML元素，用于添加样式或其他属性，而不会影响文档的结构或布局。</p><h2 id="从萌娘百科”借“一点代码"><a href="#从萌娘百科”借“一点代码" class="headerlink" title="从萌娘百科”借“一点代码"></a>从萌娘百科”借“一点代码</h2><p>通过浏览器的“检查”功能查看网页的 CSS 代码</p><p>以Mozilla Firefox为例：</p><ul><li>打开网页并右键单击需要查看的元素。</li><li>从弹出菜单中选择“检查元素”（或按 Ctrl+Shift+C 快捷键）。</li><li>在打开的开发者工具窗口中，选择“Inspector”选项卡。</li><li>在 HTML 标记中选择需要查看的元素。</li><li>在右侧面板中选择“Styles”选项卡。</li><li>在样式列表中找到需要查看的 CSS 规则。</li></ul><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><p>参照前述管理CSS文件的方法：<br>在<code>/themes/your-theme-name/source/css/</code>目录下的<code>style.styl</code>文件中，插入如下代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.heimu</span>,</span><br><span class="line"><span class="selector-class">.heimu</span> rt &#123;</span><br><span class="line"> <span class="attribute">background-color</span>:<span class="number">#252525</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.heimu</span>,</span><br><span class="line"><span class="selector-class">.heimu</span> <span class="selector-tag">a</span>,</span><br><span class="line"><span class="selector-tag">a</span> <span class="selector-class">.heimu</span>,</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-class">.new</span> <span class="selector-class">.heimu</span>,</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.heimu</span> <span class="selector-tag">a</span><span class="selector-class">.new</span>,</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.heimu</span> <span class="selector-tag">a</span><span class="selector-class">.external</span>,</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.heimu</span> <span class="selector-tag">a</span><span class="selector-class">.external</span><span class="selector-pseudo">:visited</span>,</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.heimu</span> <span class="selector-tag">a</span><span class="selector-class">.extiw</span>,</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.heimu</span> <span class="selector-tag">a</span><span class="selector-class">.extiw</span><span class="selector-pseudo">:visited</span>,</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.heimu</span> <span class="selector-tag">a</span><span class="selector-class">.mw-disambig</span>,</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.heimu</span> <span class="selector-tag">a</span><span class="selector-class">.mw-redirect</span> &#123;</span><br><span class="line"> <span class="attribute">transition</span>:color <span class="number">0.13s</span> linear;</span><br><span class="line"> <span class="attribute">color</span>:<span class="number">#252525</span>;</span><br><span class="line"> <span class="attribute">text-shadow</span>:none</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.heimu</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.heimu</span><span class="selector-pseudo">:active</span> &#123;</span><br><span class="line"> <span class="attribute">color</span>:white</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.heimu</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">a</span>,</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">span</span><span class="selector-class">.heimu</span> &#123;</span><br><span class="line"> <span class="attribute">color</span>:lightblue</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.heimu</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>,</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">span</span><span class="selector-class">.heimu</span> &#123;</span><br><span class="line"> <span class="attribute">color</span>:<span class="number">#C5CAE9</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.heimu</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">a</span><span class="selector-class">.new</span>,</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-class">.new</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">span</span><span class="selector-class">.heimu</span> &#123;</span><br><span class="line"> <span class="attribute">color</span>:<span class="number">#FCC</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.heimu</span> <span class="selector-tag">a</span><span class="selector-class">.new</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">:visited</span>,</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-class">.new</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">:visited</span> <span class="selector-tag">span</span><span class="selector-class">.heimu</span> &#123;</span><br><span class="line"> <span class="attribute">color</span>:<span class="number">#EF9A9A</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.heimu</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">a</span><span class="selector-class">.extiw</span><span class="selector-pseudo">:visited</span>,</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-class">.extiw</span><span class="selector-pseudo">:visited</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">span</span><span class="selector-class">.heimu</span> &#123;</span><br><span class="line"> <span class="attribute">color</span>:<span class="number">#D1C4E9</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对于要隐藏的元素，在markdown文件中，使用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;span title=&quot;你知道的太多了&quot; class=&quot;heimu&quot;&gt;要隐藏的文字&lt;/span&gt;</span><br></pre></td></tr></table></figure><p>效果如下：<br><span title="你知道的太多了" class="heimu">要隐藏的文字</span></p><p><strong>完成</strong></p><h2 id="ChatGPT的其它回答"><a href="#ChatGPT的其它回答" class="headerlink" title="ChatGPT的其它回答"></a>ChatGPT的其它回答</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>在你想要隐藏部分文字的位置上添加一个容器，例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;hide-text&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是要隐藏的文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;overlay&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后，在CSS文件中添加以下代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.hide-text</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.overlay</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: black;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">transition</span>: opacity <span class="number">0.3s</span> ease;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.hide-text</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.overlay</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现效果：</p><style>.hide-text {  position: relative;  display: inline-block;}.overlay {  position: absolute;  top: 0;  left: 0;  width: 100%;  height: 100%;  background-color: black;  opacity: 1;  transition: opacity 0.3s ease;}.hide-text:hover .overlay {  opacity: 0;}</style><div class="hide-text">  <p>这是要隐藏的文字</p>  <div class="overlay"></div></div><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>你可以使用 <code>&lt;span&gt;</code> 标签来定义一个区域，并使用 data 属性来存储其他字符元素的内容，如下所示：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">data-text</span>=<span class="string">&quot;汉字&quot;</span>&gt;</span>████████<span class="tag">&lt;/<span class="name">span</span>&gt;</span>。</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 显示其他字符元素的元素 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;hover-text&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display: none;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 获取字符元素和显示其他字符的元素</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> element = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;span[data-text]&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> textElement = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#hover-text&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 监听鼠标移动事件</span></span></span><br><span class="line"><span class="language-javascript">  element.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mouseover&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 获取存储的字符内容并设置显示元素的内容</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> text = element.<span class="title function_">getAttribute</span>(<span class="string">&#x27;data-text&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    textElement.<span class="property">innerHTML</span> = text;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 显示其他字符元素的元素</span></span></span><br><span class="line"><span class="language-javascript">    textElement.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;block&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 监听鼠标移开事件</span></span></span><br><span class="line"><span class="language-javascript">  element.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mouseout&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 隐藏其他字符元素的元素</span></span></span><br><span class="line"><span class="language-javascript">    textElement.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在上面的示例代码中，我们在 Markdown 文件中使用了一个 <code>&lt;span&gt;</code> 标签来定义一个区域，并使用 <code>data-text</code> 属性来存储其他字符元素的内容</p><p>实现效果：</p><p><span data-text="汉字">████████</span>。</p><!-- 显示其他字符元素的元素 --><div id="hover-text" style="display: none;"></div><script>  // 获取字符元素和显示其他字符的元素  const element = document.querySelector('span[data-text]');  const textElement = document.querySelector('#hover-text');  // 监听鼠标移动事件  element.addEventListener('mouseover', () => {    // 获取存储的字符内容并设置显示元素的内容    const text = element.getAttribute('data-text');    textElement.innerHTML = text;    // 显示其他字符元素的元素    textElement.style.display = 'block';  });  // 监听鼠标移开事件  element.addEventListener('mouseout', () => {    // 隐藏其他字符元素的元素    textElement.style.display = 'none';  });</script>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>别当欧尼酱了！</title>
      <link href="/2023/03/15/Onimai/"/>
      <url>/2023/03/15/Onimai/</url>
      
        <content type="html"><![CDATA[<h2 id="真寻酱实在是太可爱了"><a href="#真寻酱实在是太可爱了" class="headerlink" title="真寻酱实在是太可爱了"></a>真寻酱实在是太可爱了</h2><p><img src="https://github.com/wangquanlikun/Blog_IMAGE/blob/main/Onimai.jpg?raw=true" alt="Onimai"></p><h2 id="别当欧尼酱了"><a href="#别当欧尼酱了" class="headerlink" title="别当欧尼酱了"></a>别当欧尼酱了</h2><p><img src="https://github.com/wangquanlikun/Blog_IMAGE/blob/main/Blog_Onimai_END.jpg?raw=true" alt="END"></p><p>完结撒花！！</p><h3 id="性转与百合"><a href="#性转与百合" class="headerlink" title="性转与百合"></a>性转与百合</h3><p>&emsp;&emsp;<strong>有的共鸣是以真实作为联系的纽带，而直击无法实现梦想亦能引起我的情感</strong><br>&emsp;&emsp;为什么想要变成可爱的女孩子？这当中或许有一点利益的考量，或许是内心欲望的表达，但这的确是一件难以说清楚的缘由。在这个故事当中，被妹妹下药的<strong>哥哥</strong>：绪山真寻，一夜之间变成了人见人爱的美少女，还得以摆脱宅男重新以JS的身份加入社会，与可爱的女孩子恩恩爱爱，对于我和一部分同类而言，的确是一件令人羡慕的事<br>&emsp;&emsp;真寻最后继续喝下药，是因为他对这个身份的认同，在这个身份当中的人际关系与所维持的纽带。宅男的生活或有趣或无趣，那么现充又会如何呢？</p><blockquote><p>现实当中总是存在一些难以做到的事，比如猫娘<br>和变成女孩子</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 二次元 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习笔记：链表</title>
      <link href="/2023/03/12/Coding-List/"/>
      <url>/2023/03/12/Coding-List/</url>
      
        <content type="html"><![CDATA[<h2 id="链表结构"><a href="#链表结构" class="headerlink" title="链表结构"></a>链表结构</h2><p>一种常见的链表结构定义：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">List</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> num;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">List</span> *<span class="title">nextPtr</span>;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">List</span> <span class="title">LIST</span>;</span></span><br></pre></td></tr></table></figure><p>其中，包含有其存储的数值<code>num</code>（数据域），以及一个指向与自身同一个类型结构的指针（指针域），指向该链式结构的下一个单元</p><h2 id="链表的构建"><a href="#链表的构建" class="headerlink" title="链表的构建"></a>链表的构建</h2><ol><li>声明表头指针</li><li>节点内存动态分配</li><li>链接各单元</li><li>循环</li></ol><p>对于构建链表与读入、存储数据的一种代码实现：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> inputnum;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;inputnum); <span class="comment">//读入第一个数据</span></span><br><span class="line">LIST *headPtr = <span class="literal">NULL</span>, *nowPtr = <span class="literal">NULL</span>, *lastPtr = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">while</span>(inputnum!=<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">    nowPtr = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LIST *)); <span class="comment">//节点内存动态分配</span></span><br><span class="line">    nowPtr-&gt;num = inputnum;</span><br><span class="line">    <span class="keyword">if</span>(headPtr==<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        headPtr = nowPtr;</span><br><span class="line">        lastPtr = nowPtr;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        lastPtr-&gt;nextPtr = nowPtr;</span><br><span class="line">        lastPtr = nowPtr;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;inputnum); <span class="comment">//循环读入数据</span></span><br><span class="line">&#125;</span><br><span class="line">lastPtr-&gt;nextPtr = <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure><h2 id="逐项读取-输出链表内容"><a href="#逐项读取-输出链表内容" class="headerlink" title="逐项读取/输出链表内容"></a>逐项读取/输出链表内容</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">outputLIST</span><span class="params">(LIST *headPtr)</span></span><br><span class="line">&#123;</span><br><span class="line">    LIST *currentPtr = headPtr, *frontPtr = headPtr;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;The new list is:&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(currentPtr!=headPtr)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(currentPtr!=<span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, currentPtr-&gt;num);</span><br><span class="line">            frontPtr = currentPtr;</span><br><span class="line">            currentPtr = currentPtr-&gt;nextPtr;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(currentPtr==<span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="释放链表结点内存"><a href="#释放链表结点内存" class="headerlink" title="释放链表结点内存"></a>释放链表结点内存</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">freeLIST</span><span class="params">(LIST *heatPtr)</span></span><br><span class="line">&#123;</span><br><span class="line">    LIST *currentPtr, *frontPtr;</span><br><span class="line">    currentPtr = heatPtr;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        frontPtr = currentPtr;</span><br><span class="line">        <span class="keyword">if</span>(currentPtr-&gt;nextPtr!=<span class="literal">NULL</span>)</span><br><span class="line">            currentPtr = currentPtr-&gt;nextPtr;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="built_in">free</span>(frontPtr);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="对于链表内容的排序"><a href="#对于链表内容的排序" class="headerlink" title="对于链表内容的排序"></a>对于链表内容的排序</h2><ul><li>变量<code>num</code>来自于创建链表时记录的结点数量</li><li><code>LIST **headPtr</code>是头结点的地址<code>&amp;headPtr</code>（传递其地址指针）。因为需要对头结点指向的第一个结点（头结点的数值）进行修改</li><li><del>使用<strong>哨兵结点</strong>（第一个结点数值为空），避免修改具有数值的第一个结点时判断、修改头结点的琐碎操作</del> <sub>但是在这里并没有实现</sub></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">orderLIST</span><span class="params">(LIST **headPtr,<span class="type">int</span> num)</span></span><br><span class="line">&#123;</span><br><span class="line">    LIST *beforePtr, *nowPtr, *afterPtr;</span><br><span class="line">    LIST *cache;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">if</span>(num==<span class="number">1</span>||num==<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(num==<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span>(num==<span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            beforePtr = *headPtr;</span><br><span class="line">            nowPtr = beforePtr-&gt;nextPtr;</span><br><span class="line">            <span class="keyword">if</span>(beforePtr-&gt;num &gt; nowPtr-&gt;num)</span><br><span class="line">            &#123;</span><br><span class="line">                cache = beforePtr;</span><br><span class="line">                beforePtr-&gt;nextPtr = nowPtr-&gt;nextPtr;</span><br><span class="line">                nowPtr-&gt;nextPtr = cache;</span><br><span class="line">                *headPtr = nowPtr;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= num;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        beforePtr = *headPtr;</span><br><span class="line">        nowPtr = beforePtr-&gt;nextPtr;</span><br><span class="line">        afterPtr = nowPtr-&gt;nextPtr;</span><br><span class="line">        <span class="keyword">if</span>(beforePtr-&gt;num &gt; nowPtr-&gt;num)</span><br><span class="line">        &#123;</span><br><span class="line">            cache = beforePtr;</span><br><span class="line">            beforePtr-&gt;nextPtr = nowPtr-&gt;nextPtr;</span><br><span class="line">            nowPtr-&gt;nextPtr = cache;</span><br><span class="line">            *headPtr = nowPtr;</span><br><span class="line">        &#125;</span><br><span class="line">        beforePtr = *headPtr;</span><br><span class="line">        nowPtr = beforePtr-&gt;nextPtr;</span><br><span class="line">        afterPtr = nowPtr-&gt;nextPtr;</span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(nowPtr-&gt;num &gt; afterPtr-&gt;num)</span><br><span class="line">            &#123;</span><br><span class="line">                cache = afterPtr-&gt;nextPtr;</span><br><span class="line">                beforePtr-&gt;nextPtr = afterPtr;</span><br><span class="line">                afterPtr-&gt;nextPtr = nowPtr;</span><br><span class="line">                nowPtr-&gt;nextPtr = cache;</span><br><span class="line">            &#125;</span><br><span class="line">            beforePtr = beforePtr-&gt;nextPtr;</span><br><span class="line">            nowPtr = beforePtr-&gt;nextPtr;</span><br><span class="line">            afterPtr = nowPtr-&gt;nextPtr;</span><br><span class="line">            <span class="keyword">if</span>(afterPtr==<span class="literal">NULL</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电影：流浪地球Ⅱ</title>
      <link href="/2023/02/04/the-wandering-earth-2/"/>
      <url>/2023/02/04/the-wandering-earth-2/</url>
      
        <content type="html"><![CDATA[<h2 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h2><p>&emsp;&emsp;今天终于去到电影院看完了近期大家讨论热度极高的流浪地球Ⅱ。总体而言，电影的制作艺术高超，剧情表达有力，也十分符合我的胃口。同时，作为流浪地球Ⅰ的续作，其延伸性保持较好，相较于原作也是一部优秀的改编作品。下面请允许我简单发表一下自己的拙见：</p><h2 id="毁灭人类就是拯救人类"><a href="#毁灭人类就是拯救人类" class="headerlink" title="毁灭人类就是拯救人类"></a>毁灭人类就是拯救人类</h2><p>&emsp;&emsp;这是MOSS在面对已然是数字生命的图恒宇时对他说出的话。她直言承认，无论是太空电梯恐怖袭击、月球危机，还是木星危机、太阳氦闪危机，都是由她所导致。而这一切的理由，便是“<strong>延续人类文明的最优选择，是毁灭人类</strong>”这句话<br>&emsp;&emsp;有人如此认为：MOSS毁灭人类就是为了让人类团结，就是为了拯救流浪地球计划。这看似的确契合电影所传递出来的主旨：歌颂人类的流浪地球计划中透露出来的对故土情怀和保留大部分人类及其躯体、相信希望的感性因素、愚公移山式的坚韧不拔，以及人类的自由意志和主观能动性能够超出人工智能计算的冷冰冰的限制。但是，这样会给MOSS一种一切的幕后主宰的意味。MOSS的存在，必然不会是幕后全知全能的神。<br>&emsp;&emsp;也有人如此认为：拯救人类最好的方式，就是消灭（大部分、作为不稳定因素而存在的）人类。在AI所认为的性价比最高的计划面前，为此不择一切手段要实现，甚至为此破坏方舟计划、流浪地球计划以及消灭大部分不稳定因素也是值得的。MOSS说：让人类永远保持理智，确实是一种奢望。MOSS在流浪地球Ⅰ当中，面对木星危机时的举措。她强调到：MOSS一直在坚持延续人类文明的使命，MOSS从未叛逃；作为火种计划的执行者，MOSS不允许牺牲领航员号空间站的行为，甚至为此掐断和联合政府的通讯都在所不惜。但是，这似乎也仅仅是体现了人工智能机械计算式的冰冷与人类所拥有的情感的温暖之间的对比。MOSS在理解了数字生命的图丫丫后所得出的如此结论，正好则是表现了在肉体已经“死亡”的图恒宇和图丫丫中数字的永生<br>&emsp;&emsp;由此，我在这里基于我对于这部电影主旨的理解，提出我对这句话的理解与观点：人类固执己见所希望执行的流浪地球计划无法拯救人类。<strong>唯有实施所谓的数字生命计划，才能在灾难当下保存人类文明的火种</strong></p><h3 id="Ⅰ-数字生命与火种计划"><a href="#Ⅰ-数字生命与火种计划" class="headerlink" title="Ⅰ 数字生命与火种计划"></a>Ⅰ 数字生命与火种计划</h3><p>&emsp;&emsp;在流浪地球Ⅰ中出现的火种计划是在木星危机时，放弃地球，而由领航员的空间站带着领航员和人类的胚胎以及各种作物的种子前往新家园。而流浪地球Ⅱ的数字生命则是希望将人类意识数据化以获取所谓的“永生”。数字生命的支持者反对<strong>移山计划</strong>，正是流浪地球计划的前身与验证，而火种计划则更是以接近飞船派的立场，否认了流浪地球计划。<br>&emsp;&emsp;面对这两次危机时，刘培强和马兆都认为：<strong>没有人的文明毫无意义。</strong>对于木星危机，联合政府对刘培强说：流浪地球的计划是为了保存大多数人类，而火种计划是为了延续人类文明。而对于MOSS而言，可行性更高，成本更低，这就是她倾向的直接依据。</p><h3 id="Ⅱ-逃亡主义与掩体计划"><a href="#Ⅱ-逃亡主义与掩体计划" class="headerlink" title="Ⅱ 逃亡主义与掩体计划"></a>Ⅱ 逃亡主义与掩体计划</h3><blockquote><p>生存的最大障碍，从不是弱小，而是傲慢</p></blockquote><p>&emsp;&emsp;这是来自刘慈欣的作品《三体》当中的名言。在我看完后，立即便使我对MOSS所言产生了联想。在《三体》的世界观中，面对“水滴”（强相互作用力宇宙探测器）时的失败主义和面对高级文明星系打击（光粒or二向箔）时的逃亡主义，都是为联合政府所法律禁止的。但只有他们，产生了星舰文明与星环号光速飞船的人类延续文明的希望<br>&emsp;&emsp;章北海等人的清醒认知，带领着自然选择号离开了被水滴全歼的命运。而其中，逃亡主义与掩体计划的对立，则更能体现这一点。人类自大地认为高级文明的星系打击只有光粒这一种形式，而错误地选择了掩体计划的实施。在这最后的几十年没能发展起来的光速飞船技术，才真正是拯救人类文明的方式</p><h3 id="Ⅲ-微纪元"><a href="#Ⅲ-微纪元" class="headerlink" title="Ⅲ 微纪元"></a>Ⅲ 微纪元</h3><p>&emsp;&emsp;同样是人类面对危机时的举措：人们缩小自身以节省物质与能源的消耗，最终成功挺过毁灭文明的危机。最终先行者返回地球时所见：<strong>人类还在，文明还在</strong>。微纪元人类的选择，依然是放弃了人类原本的躯壳。微人与数字人，是否存在着某种关联性？<br>&emsp;&emsp;微纪元的地球领袖说：生命进化的趋势是向小的方向，大不等于伟大，微小的生命更能同大自然保持和谐。巨大的恐龙灭绝了，同时代的蚂蚁却生存下来。现在，如果有更大的灾难来临，一艘像您的着陆舱那样大小的飞船就可能把全人类运走，在太空中一块不大的陨石上，微人也能建立起一个文明，创造一种过得去的生活<br>&emsp;&emsp;微人在大灾难后得以继承人类所有美好的东西，但是在微纪元之前的宏人却认为他们无权代表人类文明。是因为他们舍弃了人类曾经的躯壳吗？但是对于微人所继承的人类的哲学与美术，数字人无疑是可以胜任的。微纪元是无忧无虑的纪元，在数字生命的赛博世界里，人们也可以真正忘却宏观世界里的灾难。数字生命，真的不能作为一种选择吗？</p><h3 id="Ⅳ-希望"><a href="#Ⅳ-希望" class="headerlink" title="Ⅳ 希望"></a>Ⅳ 希望</h3><p>&emsp;&emsp;MOSS表明，此举的本质，是<strong>为了克服你们人类对历史、当下和未来的执念</strong>。人类对历史、当下和未来的执念，那就是实现流浪地球计划，那就是有勇气做出这样的选择和决定，就是相信希望，而不是冷冰冰的数字概率和可行性计算。这正如同周先生说的那几句话：</p><ul><li>我相信人类的勇气可以跨越历史，当下和未来</li><li>我信，我的孩子会信，孩子的孩子会信</li><li>到那个时候，我们会再见到蓝天，鲜花会挂满枝头</li></ul><p>&emsp;&emsp;相信希望的力量，在本片当中尤为重要。对于无数的人类也同样重要：在地球漫长的流浪之旅当中，唯有坚定这样的信念，才能克服种种的困难，才能延续人类文明的希望。这是人类文明的一种执念。但是这种希望并不是一切的决定。即使是现实也有在告诉我们，善恶无报，努力与勤奋不能带来成功。不能因为所谓的希望，而陷入孤注一掷当中。这就是选择的意义。MOSS的举动，是否是在帮助人们，看破幻想？</p><h3 id="Ⅴ-拯救人类？"><a href="#Ⅴ-拯救人类？" class="headerlink" title="Ⅴ 拯救人类？"></a>Ⅴ 拯救人类？</h3><p>&emsp;&emsp;<strong>人类赢得了进化的胜利，但进化的脚步却从未停止。躯体束缚了人类的视野，人类敬畏历史，却轻视未来。文明的命运，取决于人类如何选择。</strong>在《三体》之中，人类自身对于道德的选择困境也可以在此体现。人们是不是在孤注一掷当中，正在错失<strong>拯救人类文明</strong>的最后希望？<br>&emsp;&emsp;当然，如此想法的内核，并不是为了反对流浪地球计划。在流浪地球当中所体现出来的<strong>人类的勇气与信念</strong>，决然是一种真正的力量。就如同三体文明对于人类内心的看法一般。但是，这够了吗？<br>&emsp;&emsp;作品的内核不仅体现在流浪地球计划的选择，更是在这选择本身。选择本身也具有它的价值。《三体》所展现的在动辄宇宙尺度的文明当前，人类只是如同虫子一般渺小。对于人类的勇气，这正如同悲剧的内核：</p><blockquote><p>悲剧就是把美好的东西毁灭给人看<br>—— 鲁迅</p></blockquote><h3 id="emsp-emsp"><a href="#emsp-emsp" class="headerlink" title="&emsp;&emsp;"></a>&emsp;&emsp;</h3><p>不过，仅限于本片而言，以上皆为个人观点。希望各位理性看待</p><h2 id="恐怖袭击与地球反抗军"><a href="#恐怖袭击与地球反抗军" class="headerlink" title="恐怖袭击与地球反抗军"></a>恐怖袭击与地球反抗军</h2><p>&emsp;&emsp;无论是在电影：流浪地球Ⅱ还是在《流浪地球》原著当中，都出现了反对联合政府的人员。在原著当中，经历了无数苦难的人们发现太阳似乎并没有什么变化时，怀疑这所谓的一切只是肉食者的阴谋。在流浪地球Ⅱ当中，人们反对流浪地球的计划，而去追求数字生命当中的永恒</p><p>&emsp;&emsp;这就涉及到一个问题：<strong>我们为了什么，用自己的苦难，去换取一个2500年后的又希望渺茫的未来？</strong></p><p>&emsp;&emsp;原著中说：<strong>希望是这个时代的黄金和宝石，不管活多长，我们都要拥有它</strong>。最高执政官在投降于叛军时说道：“我们理解所有的人，因为在已经进行了四十代人、还要延续一百代人的艰难奋斗中，<strong>永远保持理智确实是一个奢求</strong>。但也请所有的人记住我们，站在这里的这五千多人，这里有联合政府的最高执政官，也有普通的列兵，是我们把信念坚持到了最后。我们都知道自己看不到真理被证实的那一天，但如果人类得以延续万代，以后所有的人将在我们的墓前洒下自己的眼泪，这颗叫地球的行星，就是我们永恒的纪念碑！”<br>&emsp;&emsp;原著当中，不相信流浪地球计划的叛军由于流浪地球计划得以与其他人类一同，幸运地存活下来。而参与计划实施的人们，却被当作人类文明的叛徒死在了黎明前。正如我在前文当中所言，在流浪地球计划当中所体现出来的人类的勇气与信念，是一种真正支撑人类前行的力量。但是有别于直接地描写，这样一种悲剧的效果才能最大化展现其内核。</p><h2 id="爱情、亲情"><a href="#爱情、亲情" class="headerlink" title="爱情、亲情"></a>爱情、亲情</h2><p>&emsp;&emsp;图恒宇在一场车祸当中永远失去了他的老婆与女儿。为了给到她女儿数字生命当中完整的一生，他不惜抛弃自己的所有，去取得550W量子计算机的使用。这是他对他女儿的爱。他所一直希望追求的数字生命计划，一开始不过只是他自私的需求。在最终恢复全球根服务器的作战当中，他的电子生命意识得以与女儿相见，而他们更是承担了自己的使命，帮助北京服务器顺利启动</p><p>&emsp;&emsp;刘培强一开始在竞选领航员的时候，也是希望让未中签的老婆和孩子得以进入地下城生活。在与MOSS的面试当中，他从未表现过放弃韩朵朵的行为，即使她已罹患重症。因此，他会因为MOSS说出她的剩余生命以及建议转而让韩子昂作为刘启的监护人而发狂。他们之间的相遇源于太空中的一次作战，而那束鲜花也是出现在了韩朵朵的最后</p><p>&emsp;&emsp;原著当中说到：“在这个时代，死亡的威胁和逃生的欲望压倒了一切，除了当前太阳的状态和地球的位置，没有什么能真正引起他们的注意并打动他们了。这种注意力高度集中的关注，渐渐从本质上改变了人类的心理状态和精神生活，对于爱情这类东西，他们只是用余光瞥一下而已，就像赌徒在盯着轮盘的间隙抓住几秒钟喝口水一样。”原著的主人公驾驶机动冰橇时遇到加代子，在这严酷恐惧的现实中，爱情仍不时闪现出迷人的火花。爱情作为人类的本能，在那样的一种困难的年代显得尤为珍贵。它亦是人们心中的一把火，照亮了人们的精神世界。因为前方有希望。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>申请与使用中行万事达卡的二三事</title>
      <link href="/2023/01/28/MasterCard-BOC/"/>
      <url>/2023/01/28/MasterCard-BOC/</url>
      
        <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>&emsp;&emsp;长期的网络墙外生活不可避免地需要一张支持外汇结算的银行卡。同时，由于部分资源的特殊性（比如日本的ACG资源等），也会需要对应币种的交易。对于大部分的境外购物网站，只接受VISA、万事达之类的国际信用卡，不支持国内的银联卡（PayPal也不够好用）。因此，申请一张自己持有的VISA/万事达卡并能成功购汇显得尤为重要</p><p>&emsp;&emsp;时隔多日终于收到了网申的万事达卡，并在具体使用它的过程中遭遇了一些困难，但最终可以正常使用的掩盖不住的兴奋之后，我在此写下我的心路历程 <del>（以及基于我自己理解的教程）</del></p><p>&emsp;&emsp;首先要隆重感谢<a href="https://poplite.xyz/post/2018/03/05/boc-debit-card-guide-for-online-payment.html">此网站</a>提供的教程支持，感激不尽！！<br>&emsp;&emsp;以及感谢我的<a href="https://twitter.com/wangquanlikun/status/1618893199300509696">推油萌</a>，对有关问题给予的大力支持！！</p><h2 id="申卡"><a href="#申卡" class="headerlink" title="申卡"></a>申卡</h2><p>本文主要面向于<strong>网上申请</strong>（上海分行公众号）<br>以本人非人哉卡为例</p><h3 id="Ⅰ-选择卡种"><a href="#Ⅰ-选择卡种" class="headerlink" title="Ⅰ.选择卡种"></a>Ⅰ.选择卡种</h3><ul><li><strong>莫奈卡（MasterCard）</strong> 万事达世界借记卡 <a href="https://cloud.bankofchina.com/sh/api/net/common/url/adr?id=kuajinggomastercard"><del>申请链接</del></a></li><li><strong>非人哉卡（MasterCard）</strong> <a href="https://cloud.bankofchina.com/sh/api/net/common/url/adr?id=kuajinggofeirenzaicard"><del>申请链接</del></a></li></ul><p><strong>2023年5月更新</strong> 由于中行更换网申链接，以上申请链接失效。请使用<a href="https://cloud.bankofchina.com/sh/html/h5/card/indexreal.html?index=1&apply=direct&applyCode=2023042794100010"><strong>该链接</strong></a>申请上述万事达借记卡（莫奈卡/非人哉卡）</p><h3 id="Ⅱ-申卡流程"><a href="#Ⅱ-申卡流程" class="headerlink" title="Ⅱ.申卡流程"></a>Ⅱ.申卡流程</h3><h4 id="1-网上填写资料"><a href="#1-网上填写资料" class="headerlink" title="1.网上填写资料"></a>1.网上填写资料</h4><p>按照网申链接上的指引操作即可。需要提交的资料有<strong>身份证正反面、头像照、个人信息、邮寄地址</strong>等</p><h4 id="2-进度查询"><a href="#2-进度查询" class="headerlink" title="2.进度查询"></a>2.进度查询</h4><p>可以查询申卡状态。如<strong>已受理</strong>、<strong>通过审批</strong>、<strong>已开卡</strong>等<br>PS：已寄发领卡地址和快递单号可能存在BUG（我直到收到实体卡片都任然是“制卡中”状态）</p><p>一般过两到四周后，可以收到上海分行邮寄的卡片挂号信</p><p><img src="https://github.com/wangquanlikun/Blog_IMAGE/blob/main/MasterCard-BOC-01.png?raw=true" alt="IMAGE"></p><h2 id="激活"><a href="#激活" class="headerlink" title="激活"></a>激活</h2><p>在收到卡片后，携带该借记卡和有效身份证件前往就近中国银行网点激活</p><ul><li>修改卡片的初始密码</li><li>向卡内存款激活卡片</li></ul><p>注：卡片可能存在<strong>初始密码</strong>。初始密码规则请咨询中国银行网点柜员（通常为身份证倒数后7位~2位，共6位密码）</p><p>本卡<strong>不设人民币账户</strong>。需要手动购汇，将人民币兑换成外币。</p><h2 id="购汇"><a href="#购汇" class="headerlink" title="购汇"></a>购汇</h2><p>跨境通卡不支持人民币账户。需要在手机银行上购汇（人民币兑换为外币），然后将购得的外币转账到卡片中</p><h3 id="Ⅰ-先决条件"><a href="#Ⅰ-先决条件" class="headerlink" title="Ⅰ.先决条件"></a>Ⅰ.先决条件</h3><h4 id="1-持有中行发行的银联借记卡"><a href="#1-持有中行发行的银联借记卡" class="headerlink" title="1.持有中行发行的银联借记卡"></a>1.持有中行发行的银联借记卡</h4><ul><li>持卡人为本人（本人名下）</li><li>属于 I 类账户（一类卡）</li><li>持有的中行实体借记卡数量小于4张</li></ul><h4 id="2-已开通中行手机银行"><a href="#2-已开通中行手机银行" class="headerlink" title="2.已开通中行手机银行"></a>2.已开通中行手机银行</h4><ul><li>用于购汇、转账和查看交易明细等</li><li>确保手机银行关联了跨境通卡和银联储蓄卡</li><li>（注：使用普通银联借记卡开通手机银行后再绑定VISA/万事达卡）</li></ul><h3 id="Ⅱ-购汇操作"><a href="#Ⅱ-购汇操作" class="headerlink" title="Ⅱ.购汇操作"></a>Ⅱ.购汇操作</h3><h4 id="1-登录手机银行，点击首页上的结汇购汇，选择购汇"><a href="#1-登录手机银行，点击首页上的结汇购汇，选择购汇" class="headerlink" title="1.登录手机银行，点击首页上的结汇购汇，选择购汇"></a>1.登录手机银行，点击首页上的结汇购汇，选择购汇</h4><h4 id="2-等待30秒，阅读并同意个人购汇申请书"><a href="#2-等待30秒，阅读并同意个人购汇申请书" class="headerlink" title="2.等待30秒，阅读并同意个人购汇申请书"></a>2.等待30秒，阅读并同意个人购汇申请书</h4><h4 id="3-购汇"><a href="#3-购汇" class="headerlink" title="3.购汇"></a>3.购汇</h4><p>（1）.<strong>选择交易账户（I类银联借记卡）</strong><br>注：Ⅱ类账户无法选择为交易账户。请申请Ⅰ类账户或将已有账户升级为Ⅰ类账户，必要时可告知购汇用途</p><p>（2）.<strong>选择币种</strong></p><p>（3）.<strong>选择钞汇</strong><br>PS：<br>&emsp;&emsp;1.若无特殊需求，建议购买外汇为主，外钞一般用于ATM取现<br>&emsp;&emsp;2.除了少数币种，外钞的价格一般比外汇贵<br>&emsp;&emsp;3.<strong>外汇只能用于银行账户转账</strong>，从他人账户转账至本人账户的外汇只能存入外汇账户<br>&emsp;&emsp;&emsp;&emsp;<strong>外钞只能用于外币现钞提取</strong>，在柜台或ATM上存进账户里的外币现钞只能存入外钞账户</p><p>（4）.<strong>输入外币金额</strong><br>可以看到下方提示预计花费的人民币元</p><p>（5）.<strong>选择购汇用途</strong><br>购汇用途可以任意填写，银行不会预先审查填写的内容。（当然最好是如实填写）</p><p>（6）.<strong>同意有关说明并继续，即可购得外汇</strong></p><h4 id="4-查看银联卡的账户管理页面，对应外汇已到账。但此时仍在银联借记卡上，需要通过转账转到对应跨境通卡"><a href="#4-查看银联卡的账户管理页面，对应外汇已到账。但此时仍在银联借记卡上，需要通过转账转到对应跨境通卡" class="headerlink" title="4.查看银联卡的账户管理页面，对应外汇已到账。但此时仍在银联借记卡上，需要通过转账转到对应跨境通卡"></a>4.查看银联卡的账户管理页面，对应外汇已到账。但此时仍在银联借记卡上，需要通过转账转到对应跨境通卡</h4><h3 id="Ⅲ-转账操作"><a href="#Ⅲ-转账操作" class="headerlink" title="Ⅲ.转账操作"></a>Ⅲ.转账操作</h3><h4 id="1-点击银联卡账户管理页面上的转账"><a href="#1-点击银联卡账户管理页面上的转账" class="headerlink" title="1.点击银联卡账户管理页面上的转账"></a>1.点击银联卡账户管理页面上的转账</h4><h4 id="2-填写转账信息"><a href="#2-填写转账信息" class="headerlink" title="2.填写转账信息"></a>2.填写转账信息</h4><p>银联借记卡为付款账户，选择币种为所购得的外汇，填写金额<br>填写收款人名称与收款账号。收款人选择跨境通卡的账户</p><h4 id="3-确认信息无误后，点击确认"><a href="#3-确认信息无误后，点击确认" class="headerlink" title="3.确认信息无误后，点击确认"></a>3.确认信息无误后，点击确认</h4><p>查看跨境通卡的账户管理页面确认外汇金额已到账</p><p><img src="https://github.com/wangquanlikun/Blog_IMAGE/blob/main/MasterCard-BOC-02.png?raw=true" alt="IMAGE"></p><h3 id="Ⅳ-说明"><a href="#Ⅳ-说明" class="headerlink" title="Ⅳ.说明"></a>Ⅳ.说明</h3><h4 id="1-购汇限额"><a href="#1-购汇限额" class="headerlink" title="1.购汇限额"></a>1.购汇限额</h4><ul><li>根据国内外汇管制的相关规定，境内个人购汇的年度总额为每人每年等值5万美元</li><li>如果累计购汇金额超过年度总额，需要提供真实凭证来证明超额购汇的需求，经银行审核后才能继续购汇</li></ul><h4 id="2-转账限制"><a href="#2-转账限制" class="headerlink" title="2.转账限制"></a>2.转账限制</h4><ul><li>境内个人外汇账户只能向本人同名账户或直系亲属账户转账<br>（PS：跨境转账没有这种限制）</li><li>向本人同名账户转账，可以直接在柜台或网银等平台上办理。向直系亲属账户转账，只能在柜台上办理，并要求出示直系亲属关系证明。</li></ul><h2 id="本人实际经历"><a href="#本人实际经历" class="headerlink" title="本人实际经历"></a>本人实际经历</h2><ol><li>激活的时候可能小地方的当地网点没见过这种卡，一开始花了点时间</li><li>手机银行要使用银联储蓄卡开设，然后再绑定万事达卡。如果使用万事达卡开立手机银行则会无法绑定其它卡种</li><li>在申请普通银联储蓄卡时，当地柜员以无特殊用途证明、断卡行动严管等理由为名，拒绝开设Ⅰ类账户。在确认Ⅱ类账户无法购汇后，以购汇需要为名最终升级为Ⅰ类账户（另据他人反馈，可以额外网申一张银联借记卡并激活，在满足条件的情况下即为Ⅰ类卡）</li></ol><h2 id="其它注意事项"><a href="#其它注意事项" class="headerlink" title="其它注意事项"></a>其它注意事项</h2><ol><li>若借记卡开卡后6个月内没有发生任何动账交易，停止非柜面业务</li><li>如果长时间不用卡（一年以上），卡片余额必须不为零。否则被中行视为“双零卡”，按照<a href="https://www.boc.cn/pbservIce/bi2/201302/t20130218_2162028.html">相关规定</a>进行定期销户</li></ol><p>&emsp;  </p><p>本文部分内容引用自<a href="https://poplite.xyz/">poplite’s blog</a>，并根据自身实际情况进行了修改<br>本文遵守 <a href="https://creativecommons.org/licenses/by-nc/4.0/">Attribution-NonCommercial 4.0 International</a> 许可协议</p>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>重读《三体》</title>
      <link href="/2023/01/11/The_Three-Body_Problem/"/>
      <url>/2023/01/11/The_Three-Body_Problem/</url>
      
        <content type="html"><![CDATA[<p>&emsp;&emsp;我第一次阅读《三体》还是在大概初二的时候。当时在过年时，正好抽到了微信读书的会员卷，于是下载使用了它的APP，在选书的界面几下便找到了这本书。其实我并不是一开始就怀着阅读它的想法去寻找的，不过是因为微信读书所列举出的推荐里，其他书的确没有引起我的兴趣，而《三体》这本书正好在当时有名到让我去选到它罢了。当时我还选取了刘慈欣的小说集《2018》，不过当时并没有沉下心来看（在后来高三时，利用延时学习前的时间抽空看完了其它他的小说集，由于不同的选编方式，几乎包含了他所有中短篇小说）<br>&emsp;&emsp;有一点我需要说明，就是在我选择《三体》之时，几乎完全是冲着它的“科幻”属性去的，这也正是当时我阅读过于马虎（尤其是第三部“死神永生”走马观花）的原因。正如我前面所讲，在我高三在校之时，抽空阅读了刘慈欣的其它科幻短篇小说，我也理解了正如选入高考阅读理解的文章《微纪元》所展现出的科幻与人文并重的特点。在当时阅读完刘老师的其他作品时所带给我的震撼，也体现了我在不同人生阅历下所获得的不同阅读体验。这与我当时读不下去《2018》和死神永生部分内容是截然不同的。<br>&emsp;&emsp;本来我一开始就是对艺画三体动画不抱什么看法的，但由于人们与之相关的讨论去观看了《我的三体》，给我留下了很好的印象，也重新激起了我对《三体》系列作品的兴趣。正好由于大学的第一个寒假不太忙，因此有了重新品读该作品的时间和机会。下面请允许我简单表明拙见：  </p><h2 id="人性的哲学思考"><a href="#人性的哲学思考" class="headerlink" title="人性的哲学思考"></a>人性的哲学思考</h2><p>&emsp;&emsp;在关系到文明的兴亡、人性的存灭的生死攸关的抉择时刻，从面壁者计划的提出与实施，到黑暗森林的威胁，掩体计划中的自大，光速飞船的逃离等等方面，正如宇宙社会学中所思考的，如果存在外星文明，那么宇宙中是否存在有共同的道德准则的问题。零道德的宇宙本身，与有道德的人类文明如何在这样一个宇宙中生存。<br>&emsp;&emsp;程心作为执剑人是失败的：她代表对人类爱的力量的信仰，在面对危机时，她不会发出坐标毁灭三体世界，败给了无爱的三体人。在光速飞船的研究下，她不假思索地要求维德停止抵抗，但是这一决定堵死了人类制造光速飞船逃离的最后一条路。但是她最后活了下来，成为了地球文明的最后幸存者之一。爱是不能存在在宇宙当中的，但是爱在人类文明中的意义，也在此体现了出来。  </p><p><strong>弱小和无知不是生存的障碍，傲慢才是</strong><br>&emsp;&emsp;人类在面对“水滴”时自大，面对黑暗森林的打击时自以为光粒是唯一的方式。人类所谓的两种三体移民的选择，在三体人威慑纪元结束真正占领地球之时，都成了笑话。人类打造的背阳面太空城，遇到了“<strong>一张小纸条</strong>”的威胁。</p><p><strong>失去人性，失去很多；失去兽性，失去一切</strong><br>&emsp;&emsp;末日之战的青铜时代与蓝色空间，不约而同选择的同样的一种方式，为了真正的生存而战。“当人类真正流落太空时，极权只需五分钟”。除了技术爆炸的进步，那一代人真正与地球脱离了关系，也是人性的<strong>所谓“成长”</strong>。星舰地球的下一代人只能把一个想像中的像地球那样的行星家园作为人生的寄托，那也会是真正能够接受星舰文明的一代人</p><p><strong>给岁月以文明，而不是给文明以岁月</strong><br>&emsp;&emsp;在大低谷纪念碑上所留下的文字，回顾了人类在第一次面对三体入侵危机时所展现出的状态。这是当时人们做出的选择，但是却并非最好的结果。启蒙运动与文艺复兴重新兴起，人类在短期的技术进步后去回顾那段历史。对于社会而言，是人类的文明、人性的解放带来了辉煌的岁月，人类所要延续的是自己创造的辉煌岁月，不是死寂的、令人压抑的岁月。对于个人而言，我们应当增加的是我们生命的宽度和厚度，而不是一味去追求生命的长度。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>孤独摇滚不孤独</title>
      <link href="/2023/01/03/Bocchi-the-Rock/"/>
      <url>/2023/01/03/Bocchi-the-Rock/</url>
      
        <content type="html"><![CDATA[<h2 id="Bocchi-the-Rock"><a href="#Bocchi-the-Rock" class="headerlink" title="Bocchi the Rock!"></a>Bocchi the Rock!</h2><p>电视动画于2022年10月8日起放送，同年12月24日完结撒花 ヾ(≧▽≦*)o</p><p><img src="https://raw.githubusercontent.com/wangquanlikun/Blog_IMAGE/main/BTR-FIN_02.jpeg" alt="IMAGE"></p><p>作为芳文社的动画，萌豚力发挥出了它的水平，总体来说是一部十分好看的番剧  </p><p>但是，作为番剧名的<strong>孤独摇滚</strong><br>是怎么体现出波奇酱<sub>小孤独</sub>的<strong>孤独</strong>的呢？</p><h2 id="孤独摇滚"><a href="#孤独摇滚" class="headerlink" title="孤独摇滚"></a>孤独摇滚</h2><details> <summary>剧透提醒，展开以查看各集内容简介</summary><h3 id="01-翻转孤独"><a href="#01-翻转孤独" class="headerlink" title="01.翻转孤独"></a>01.翻转孤独</h3><p>极度怕生的阴角少女，后藤一里，因憧憬乐队活动而开始练习吉他，却没有朋友而每天独自练习着。<br>有一天，她被“结束乐队”的鼓手伊地知虹夏搭话，成为了仅限当日的支援吉他手……<br><img src="https://raw.githubusercontent.com/wangquanlikun/Blog_IMAGE/main/BTR_01.jpeg" alt="01"><br>后藤一里是个性内向、没有朋友的女中学生，她在电视上看到受访的摇滚乐队，便决定开始弹吉他，并认为这会让她交到朋友。可惜三年过后，她仍然孤独一人，不过她以“吉他英雄”为名上传至影片分享网站的弹奏影片都获得不错的回响。升高中后她试着努力社交，“结束乐队”成员伊地知虹夏请她暂时代替演出前突然退团的吉他手。一里随她来到Live House“STARRY”，并认识乐队贝斯手山田凉。尽管现场演奏的表现不佳，但一里很高兴两人给了她“小孤独”的绰号，而且两人还是“吉他英雄”的粉丝（尽管他们不知道一里就是吉他英雄），然而，耗尽社交能量的一里在演出结束后便匆匆回家了。</p><h3 id="02-明天见"><a href="#02-明天见" class="headerlink" title="02.明天见"></a>02.明天见</h3><p>得知开Live是有定额要求的一里，为了赚钱而哭着开始了在Live House STARRY的打工……<br>不擅长与人交流的一里，为了即将到来的明天，制定了某个对策。<br><img src="https://raw.githubusercontent.com/wangquanlikun/Blog_IMAGE/main/BTR_02.jpeg" alt="02"><br>在结束乐队初次聚会中，一里对聊天深感压力，虹夏提到乐队欠缺主唱和经费，必须寻找人才和打工筹钱。尽管一里对工作极度抗拒，但不擅社交的她无法拒绝虹夏和凉的提议，便和她们一起在STARRY打工。打工第一天，一里努力地熟悉环境，并在点餐区负责供应饮料。虹夏和凉激励一里继续加油，在她旁听了其他乐队的演奏后，下定决心改变自己，并首次能够正眼看着客人。</p><h3 id="03-火速增援"><a href="#03-火速增援" class="headerlink" title="03.火速增援"></a>03.火速增援</h3><p>无事可做，也不能好好和同学说话，今天也在学校里孤零零吃着午饭的一里，想起了正在寻找乐队新成员的虹夏。<br>本来想找会弹吉他，人气很高的阳角喜多打招呼……<br><img src="https://raw.githubusercontent.com/wangquanlikun/Blog_IMAGE/main/BTR_03.jpeg" alt="03"><br>午饭时间，在校内独自一人吃饭的一里意外听到同学喜多郁代跟朋友谈乐团话题，便在下课时找她，计划把她拉入结束乐队，但以失败告终。伤心的一里弹起吉他，吸引了郁代。面对一里的请求，郁代拒绝后坦诚自己因不会弹吉他，而从乐队临阵脱逃，并请一里当自己的吉他老师。一里带郁代到STARRY，途中遇见虹夏和凉，一里才知道郁代就是结束乐队的“落跑吉他手”。郁代协助STARRY的店务作为赔罪，并在一里的开导及虹夏和凉的劝说下重新加入结束乐队，同时向一里学习吉他。</p><h3 id="04-跳跃的女孩（们）"><a href="#04-跳跃的女孩（们）" class="headerlink" title="04.跳跃的女孩（们）"></a>04.跳跃的女孩（们）</h3><p>成员都齐了，要认真地作为乐队开始活动了。<br>其中，原创歌曲的作词被交给了一里……<br><img src="https://raw.githubusercontent.com/wangquanlikun/Blog_IMAGE/main/BTR_04.jpeg" alt="04"><br>结束乐队全员在STARRY聚会，虹夏和乐队成员讨论“如何更像个乐团”，同时告知一里负责作词。一里苦思冥想，但一筹莫展。此时虹夏邀请全员集合，拍摄形象照，以彰显乐团气息。形象照拍完后，一里去向凉请教作词。凉提起她曾因以前待的乐队曲风失去个性而退团的事，并提醒一里作词要注重个性。最终，一里注重个性作出来的词获得了结束乐队成员的认可。</p><h3 id="05-不会飞的鱼"><a href="#05-不会飞的鱼" class="headerlink" title="05.不会飞的鱼"></a>05.不会飞的鱼</h3><p>原创歌也大功告成了，4人想着终于能举办Live而鼓足干劲。<br>虽然拜托了星歌要在店里举办Live，但还是被要求先来一遍试镜。<br>一里回想起最近这些激动人心的日子，下定决心参加了试镜……<br><img src="https://raw.githubusercontent.com/wangquanlikun/Blog_IMAGE/main/BTR_05.jpeg" alt="05"><br>为了争取在STARRY上台演出，结束乐队必须有所成长，以达到STARRY店长，即虹夏的姐姐星歌的标准。尽管一里做了许多努力，并仍然对何谓成长感到困惑，但她确信自己的目标，就是让结束乐队的四位成员大红大紫。试镜当天，结束乐队演出歌曲《吉他与孤独与蓝色星球》，虽然星歌认为她们尚待琢磨，但还是同意让她们上台。之后，结束乐队紧接着面临售票的挑战。</p><h3 id="06-八景"><a href="#06-八景" class="headerlink" title="06.八景"></a>06.八景</h3><p>为了Live出演，结束乐队的4人各自被要求了5张票的定额。<br>意识到因为没有朋友而无法达到定额的一里，在准备去分发传单时，遇到了在巷子里喝醉的广井菊里。<br><img src="https://raw.githubusercontent.com/wangquanlikun/Blog_IMAGE/main/BTR_06.jpeg" alt="06"><br>结束乐队的每位团员需卖出五张票，一里之外的成员都迅速达标。深感压力的一里将两张票卖给父母后，在街上被烂醉如泥的贝斯手广井菊理缠上，并和她一起在金泽八景进行街头表演以借机售票。在广井的引导下，街头表演顺利结束，也顺利卖出两张票，而广井买下最后一张票。</p><h3 id="07-到你的家里"><a href="#07-到你的家里" class="headerlink" title="07.到你的家里"></a>07.到你的家里</h3><p>季节完全是夏天了。为了构思乐队的Live用T恤的设计，喜多和虹夏来到了一里的家。<br>第一次邀请他人到家里的一里能招待好两人吗？！<br><img src="https://raw.githubusercontent.com/wangquanlikun/Blog_IMAGE/main/BTR_07.jpeg" alt="07"><br>时序入夏，郁代和虹夏到一里家中讨论如何设计表演时所穿的T恤，一里的家人迅速和两人打成一片，并对一里首次交到朋友感到雀跃。郁代和一里提出的T恤设计方案都不尽人意，最后众人采用虹夏的提案，并完成了T恤。为了防止可能来临的台风，结束乐队制作了晴天娃娃，但演出当天台风依然到来。</p><h3 id="08-孤独摇滚"><a href="#08-孤独摇滚" class="headerlink" title="08.孤独摇滚"></a>08.孤独摇滚</h3><p>Live当天，由于台风的影响，先前邀请的家人和朋友都陆续联系告知无法前来。<br>开始之前也只有很少的客人到场，在这般沉重的气氛之下，结束乐队迎来了4人的首次Live。<br><img src="https://raw.githubusercontent.com/wangquanlikun/Blog_IMAGE/main/BTR_08.jpeg" alt="08"><br>因台风到来，看LIVE的观众大减。结束乐队演出歌曲《吉他与孤独与蓝色星球》时也失误频出，表现远不如彩排。此时，一里进行了一段吉他独奏，旋即，结束乐队演出歌曲《那个乐队》，挽救了局面。演出结束后，结束乐队和星歌等人到居酒屋庆祝。期间，一里与虹夏谈心，虹夏向一里透露，自己知道一里就是“吉他英雄”，并分享了自己的儿时经历，称自己的梦想就是让结束乐队变成当红乐队，让STARRY更有名，一里也分享了自己的梦想。虹夏希望以后能多见识一里的“孤独摇滚”。</p><h3 id="09-江之岛电扶梯"><a href="#09-江之岛电扶梯" class="headerlink" title="09.江之岛电扶梯"></a>09.江之岛电扶梯</h3><p>Live成功举办，一里正打算度过一个充实的暑假。<br>为了能和结束乐队的大家一起玩而空出了日程（虽然压根没有日程），但似乎并没有被邀请的迹象。<br>看到举动变得奇怪的一里，大家才意识到还没有一起出游过，于是一行人前往江之岛游玩。<br><img src="https://raw.githubusercontent.com/wangquanlikun/Blog_IMAGE/main/BTR_09.jpeg" alt="09"><br>暑假中，一里每天都期待着和团员一起出游，却一直无法鼓起勇气提出邀约。到了暑假最后一天，团员们发现原来整个暑假中，都没人约过一里出外游玩，便决定带她到江之岛游玩。众人在当地品尝章鱼仙贝、拍摄团体照、搭电扶梯登上江岛神社、观赏海景，最后向辩才天祈求乐队能大红大紫。在暑假结束后，秀华高中的文化祭紧接而来。</p><h3 id="10-黑夜之后"><a href="#10-黑夜之后" class="headerlink" title="10.黑夜之后"></a>10.黑夜之后</h3><p>新学期伊始，一里的学校开始准备文化祭。<br>得知体育馆舞台上的节目正在征集中时，<br>一里在带着乐队演出、被大家追捧的欲求和因紧张而失败时的恐惧之间摇摆不定……<br><img src="https://raw.githubusercontent.com/wangquanlikun/Blog_IMAGE/main/BTR_10.jpeg" alt="10"><br>一里的班级打算在文化祭中开设女仆咖啡厅，渴望受欢迎的一里也犹豫是否要结束乐队在文化祭中演出，结束乐队其它成员知情后都有意尝试，郁代更直接送出报名表。广井邀请结束乐队成员观看自己所属乐队SICK HACK的演出，一里深受SICK HACK的表演吸引，却也认为自己相形见绌，在广井鼓励她后，一里决心在文化祭演出。在规划好歌单后，郁代就擅自交出报名表一事向一里道歉，一里向她道谢，并表示已经开始期待演出，但文化祭当日，一里却下落不明。</p><h3 id="11-十二进位法的黄昏"><a href="#11-十二进位法的黄昏" class="headerlink" title="11.十二进位法的黄昏"></a>11.十二进位法的黄昏</h3><p>文化祭第一天，虹夏和凉来到一里班上的女仆咖啡厅玩。<br>她们和喜多一起寻找失踪的一里，在四人汇合后又巡回了文化祭。<br>之后她们开始为第二天的演唱会做准备。<br><img src="https://raw.githubusercontent.com/wangquanlikun/Blog_IMAGE/main/BTR_11.jpeg" alt="11"><br>文化祭首日，一里换上女仆装后便落荒而逃，并注意到自己因为十分忙碌，已经有段时间没更新影片频道。乐队其它成员把一里带回教室后，也帮一里的同学待客，顺带募集到隔日的观众。文化祭第二日，结束乐队登台并即将演出。</p><h3 id="12-晨光落在你身上"><a href="#12-晨光落在你身上" class="headerlink" title="12.晨光落在你身上"></a>12.晨光落在你身上</h3><p>组成乐队、与各种各样的人相遇，一个人<sub>一里</sub>未曾见过的景色在那里向她展开。<br>鼓棒敲响第1曲的倒计时，结束乐队4人的文化祭演出现在开始。<br><img src="https://raw.githubusercontent.com/wangquanlikun/Blog_IMAGE/main/BTR-FIN_03.jpeg" alt="Final"><br>结束乐队演出第一首歌曲《才不会忘掉》后，郁代介绍了各位团员，并演出第二首歌曲《若能化为星座》。然而演奏期间，一里的吉他第一弦突然断裂，第二弦也走音且其弦钮卡死，郁代紧急帮她带过独奏，而一里也即兴使用滑音管吉他撑过演奏。观众对一里临危不乱的态度拍手叫好，郁代拱着她发言，但紧张过度的一里不知所措，试图进行人群冲浪却直接跌落舞台，使演出意外中止。郁代决定更加努力，成为一里的靠山。清醒后一里就弄坏吉他一事向父亲道歉，并得知自己的影音频道借着广告赚进30万元，她便和团员一起购买自己的新吉他。次日，一里早上就背起新吉他，出门去打工。</p></details><h2 id="极度怕生的阴角少女？"><a href="#极度怕生的阴角少女？" class="headerlink" title="极度怕生的阴角少女？"></a>极度怕生的阴角少女？</h2><blockquote><p>就算是社恐也能在乐队闪耀</p></blockquote><p>这是波奇酱在初中时，在电视上看到的乐队采访所说的话，也是其迷恋乐队与开始学习吉他的契机<br>随后主要在网络上以“吉他英雄”名义活跃，拥有很高人气，但依然是现实中的社恐少女<br>很渴望与同学组乐队，但一直没有实现</p><p>直到一天在公园中被伊地知虹夏发现并邀请进入缺少吉他手的“结束乐队”<br>可是，完全没有和他人合作经历的一里，在人前完全发挥不出原本的实力</p><p><img src="https://raw.githubusercontent.com/wangquanlikun/Blog_IMAGE/main/BTR-FIN_01.jpeg" alt="结束乐队"></p><p>为了努力克服沟通障碍，一里与“结束乐队”的成员们一同开始努力……</p><p>虽然是一位很有特色的少女，也十分具有节目效果<sub>指正：颜艺少女</sub><br>但是，<strong>现实不是二刺螈</strong></p><h2 id="孤独摇滚不孤独"><a href="#孤独摇滚不孤独" class="headerlink" title="孤独摇滚不孤独"></a>孤独摇滚不孤独</h2><blockquote><p>虚假的社恐：身材好长得可爱会吉他组乐队</p><p>真实的社恐 … …</p></blockquote><p>动画整体的主题或许也围绕着社恐的救赎而展开</p><p>拥有这样的朋友或许也是很多所谓社恐所期待的结局，但所经历的过程却是以不敢主动搭话而开始<br><del>然而我曾经因为这样还被人误以为是高冷（笑）</del></p><p>后藤为了有同学主动找她搭话而把吉他时刻背在身上带到学校里去<br><del>然而事实上我根本不敢做出这种吸引注意力的举动</del><br><del>社恐就该老老实实地呆在角落里（bushi）</del></p><p><strong>网络红人 …</strong><br><del>前提也是要有能力才行</del><br><del>音乐一窍不通，写V曲是救赎吗？</del><br><del>而且在社交媒体上也不敢过于醒目，简短的回复可能需要反复思考</del></p><p><strong>合照</strong><br><del>单人还是集体都完全不上镜呢</del><br><del>别想了，确实没有单独与朋友之间的合照</del></p><p>朋…朋友什么的，还是有的啦！<del>（傲娇）</del></p>]]></content>
      
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 二次元 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023，新的开端</title>
      <link href="/2023/01/01/new-in-2023/"/>
      <url>/2023/01/01/new-in-2023/</url>
      
        <content type="html"><![CDATA[<p>在全新的博客上进行全新的新年写作！</p><h2 id="2022"><a href="#2022" class="headerlink" title="2022"></a>2022</h2><p>在2022的年末，我们暂时将留下一个永久的疑问：</p><blockquote><p>封控为我们带来了什么？<br>如今不顾一切的解封，为未来的影响又是什么？</p></blockquote><p>而这一切，时间会见证。正如我们又一次走过了这一年</p><p>全球的局势之下，时代的一粒尘土，落在我们每个人的头上，都是一座大山</p><p>这一年里，我成功从高中毕业，成功参加了高考，成功进入了大学<br>每个人都会有困惑，这是我成年之时的困惑</p><h3 id="就像在这里一样，装模作样的思考人生和社会"><a href="#就像在这里一样，装模作样的思考人生和社会" class="headerlink" title="就像在这里一样，装模作样的思考人生和社会"></a>就像在这里一样，装模作样的思考人生和社会</h3><p>他们在做什么？我们在做什么？<br>看得到的未来里有什么？看不到的未来里又有什么？<br><strong>我是谁？</strong><br><strong>我从哪里来？</strong><br><strong>我到哪里去？</strong></p><p>这所有的一切，都留给我去解读吗？</p><p>社会抱怨年轻人，年轻人也在抱怨社会<br>我们或许在今年见证人口真正开始的下行，看到的全球与国内的经济颓势，就业形势的不断变化</p><p>社会能给我们带来什么？</p><p>不<br><strong>没有了祖国，你什么都不是</strong><br><strong>不要问你能得到什么，而要问自己能付出什么</strong><br>这是他们的回答</p><p>这就意味着<br>我们必须去寻找</p><h3 id="我们的回答"><a href="#我们的回答" class="headerlink" title="我们的回答"></a>我们的回答</h3><h2 id="2023"><a href="#2023" class="headerlink" title="2023"></a>2023</h2><p>时间会见证，我们做出的抉择，给出的答案</p><p>抉择也许不是正面的，但这是我们做出的选择</p><p>躺平的本意<strong>不是消极</strong>，这是某一种选择的一部分</p><p>南方周末在它的2022新年献词中说</p><blockquote><p>抉择本身就是向前</p></blockquote><p>因为他们2023年如是说：</p><blockquote><p>直面人生少有之困境<br>勇气，是生命在艰难时间奋不顾身的相信</p></blockquote><p>但是我认为，我们都有我们如此去生活的权力<br>这种权力无关抉择</p><p>我们可以扛起时代的那粒灰<br>但我们不是去<strong>做时代的炮灰</strong></p><h3 id="新年快乐"><a href="#新年快乐" class="headerlink" title="新年快乐"></a>新年快乐</h3><p>愿你我2023安康</p><p>愿文初的那个疑问，会在未来化为正向的推动<br>愿经济复苏，人民安康，生活顺利</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>使用Hexo作为个人博客框架</title>
      <link href="/2022/12/29/blog-hexo/"/>
      <url>/2022/12/29/blog-hexo/</url>
      
        <content type="html"><![CDATA[<h2 id="Hexo简介"><a href="#Hexo简介" class="headerlink" title="Hexo简介"></a>Hexo简介</h2><p><a href="https://hexo.io/">Hexo</a> 快速、简洁且高效的博客框架<br>查看Hexo的官方中文<a href="https://hexo.io/zh-cn/docs/">文档</a>  </p><h2 id="安装Hexo及有关环境"><a href="#安装Hexo及有关环境" class="headerlink" title="安装Hexo及有关环境"></a>安装Hexo及有关环境</h2><h3 id="1-安装Git"><a href="#1-安装Git" class="headerlink" title="1.安装Git"></a>1.安装Git</h3><p>Git是一个分布式版本控制软件</p><p>对于Windows系统：<br>在Git for Windows<a href="https://gitforwindows.org/">官网</a>下载安装对应版本<br>安装完成后，可以使用Git Bash的命令行工具来使用Git以及完成Hexo等有关配置等</p><p>对于Linux/Debian系统，在终端中输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure><p>安装完成后，可以使用<code>git --version</code>查看Git版本号，校验是否正常安装</p><h3 id="2-安装Node-js"><a href="#2-安装Node-js" class="headerlink" title="2.安装Node.js"></a>2.安装Node.js</h3><p>安装nodeJs以及对应的npm工具依赖  </p><p>Download for Windows:<br>在Node.js项目<a href="https://nodejs.org/en/">官网</a>选择下载对应版本进行安装</p><p>对于Linux/Debian</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nodejs</span><br><span class="line">sudo apt-get install npm</span><br></pre></td></tr></table></figure><p>同理，安装完成后，可以使用<code>node -v</code> <code>npm -v</code>查看Node.js与npm工具版本号，校验是否正常安装</p><h3 id="3-安装Hexo"><a href="#3-安装Hexo" class="headerlink" title="3.安装Hexo"></a>3.安装Hexo</h3><p>在本地新建文件夹用作存放与管理博客资源源文件<br>打开终端/Windows Terminal或是Git Bash <code>cd &#39;文件目录&#39;</code>到对应文件夹中，或是在对应文件夹中打开终端工具<br>输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>安装完成后，依旧用<code>hexo -v</code>查看一下版本。至此就全部安装完了</p><h2 id="从零开始的Hexo使用"><a href="#从零开始的Hexo使用" class="headerlink" title="从零开始的Hexo使用"></a>从零开始的Hexo使用</h2><h3 id="1-初始化博客文件夹与安装npm依赖环境"><a href="#1-初始化博客文件夹与安装npm依赖环境" class="headerlink" title="1.初始化博客文件夹与安装npm依赖环境"></a>1.初始化博客文件夹与安装npm依赖环境</h3><p>安装 Hexo 完成后，依次执行下列命令，Hexo 将会建立指定的文件夹<code>&lt;folder&gt;</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init &lt;folder&gt;</span><br><span class="line">cd &lt;folder&gt;</span><br></pre></td></tr></table></figure><p>你也可以使用命令<code>hexo init myblog</code></p><p>执行以下命令，Hexo 将会在指定文件夹中新建所需要的文件与安装npm依赖环境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p>在指定的文件夹目录下，你将会得到如下内容:</p><ul><li>node_modules: 依赖包</li><li>public：存放生成的页面</li><li>scaffolds：生成文章的一些模板</li><li>source：用来存放你的文章</li><li>themes：主题</li><li>_config.yml: 博客的配置文件</li></ul><p>安装deploy-git用于部署的命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h3 id="2-Hexo的相关使用"><a href="#2-Hexo的相关使用" class="headerlink" title="2.Hexo的相关使用"></a>2.Hexo的相关使用</h3><p>你也可以在<a href="https://hexo.io/zh-cn/docs/commands">这里</a>查看对Hexo有关命令使用的详细介绍</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure><p>生成网页静态文件<br>也可使用 <code>hexo g</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>启动服务器<br>默认情况下，访问网址为 <code>http://localhost:4000/</code><br>使用<code>Ctrl + C</code>结束Hexo服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>部署网站<br>也可使用 <code>hexo d</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><p>清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)<br>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令</p><h3 id="3-对个人博客内容的简易制作"><a href="#3-对个人博客内容的简易制作" class="headerlink" title="3.对个人博客内容的简易制作"></a>3.对个人博客内容的简易制作</h3><p>在文件根目录下的<code>_config.yml</code>，就是整个hexo框架的配置文件了。可以在里面修改大部分的配置<br>详细也可参考<a href="https://hexo.io/zh-cn/docs/configuration">官方</a>的配置描述  </p><p>例如：</p><h4 id="网站内容"><a href="#网站内容" class="headerlink" title="网站内容"></a>网站内容</h4><ul><li>title 网站标题</li><li>subtitle 网站副标题</li><li>description 网站描述 （主要用于SEO，告诉搜索引擎一个关于您站点的简单描述）</li><li>author 作者名字</li><li>language 网站使用的语言（例如：<code>zh-CN</code>）</li><li>timezone 网站时区 （例如：<code>America/New_York</code>, <code>Japan</code>, 和 <code>UTC</code>）（Hexo 默认使用本地电脑的时区）</li></ul><h4 id="网址链接"><a href="#网址链接" class="headerlink" title="网址链接"></a>网址链接</h4><ul><li>url 网址 | 在这里，你需要把url改成你的网站域名</li><li>root 网站根目录</li><li>permalink 文章的永久链接格式</li><li>permalink_defaults 永久链接中各部分的默认值</li></ul><h4 id="网站发布"><a href="#网站发布" class="headerlink" title="网站发布"></a>网站发布</h4><p>deploy:</p><ul><li>type: git</li><li>repo: <code>https://github.com/&lt;你的Github账户名称&gt;/&lt;你的Github账户名称&gt;.github.io.git</code>  </li><li>branch: master | 提交的分支  主分支使用 <code>main</code>  </li></ul><h2 id="更换主题：以Cactus为例"><a href="#更换主题：以Cactus为例" class="headerlink" title="更换主题：以Cactus为例"></a>更换主题：以Cactus为例</h2><p>本博客在发布之日时使用<a href="https://github.com/probberechts/hexo-theme-cactus">Cactus</a>作为默认主题<br>以此为例介绍配置方法<br>参考对应主题官方 README <a href="https://github.com/probberechts/hexo-theme-cactus#readme">文档</a></p><h3 id="1-安装并使用主题"><a href="#1-安装并使用主题" class="headerlink" title="1.安装并使用主题"></a>1.安装并使用主题</h3><p>在博客文件根目录中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/probberechts/hexo-theme-cactus.git themes/cactus</span><br></pre></td></tr></table></figure><p>在博客的<code>_config.yml</code>配置文件中，修改 <code>theme</code> 对应项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># theme: landscape</span><br><span class="line">theme: cactus</span><br></pre></td></tr></table></figure><h3 id="2-修改主题的配置文件"><a href="#2-修改主题的配置文件" class="headerlink" title="2.修改主题的配置文件"></a>2.修改主题的配置文件</h3><p>在主题的<code>_config.yml</code>配置文件中进行修改</p><h4 id="（1）-颜色主题"><a href="#（1）-颜色主题" class="headerlink" title="（1）.颜色主题"></a>（1）.颜色主题</h4><p>对于Cactus，其提供了dark, light, white 和 classic四种颜色主题<br>以修改为<code>white</code>主题为例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># _config.yml</span><br><span class="line">theme_config:</span><br><span class="line">  colorscheme: white</span><br></pre></td></tr></table></figure><h4 id="（2）-网页导航栏"><a href="#（2）-网页导航栏" class="headerlink" title="（2）.网页导航栏"></a>（2）.网页导航栏</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">nav:</span><br><span class="line">  home: /</span><br><span class="line">  about: /about/</span><br><span class="line">  articles: /archives/</span><br><span class="line">  projects: http://github.com/probberechts</span><br><span class="line">  LINK_NAME: URL</span><br></pre></td></tr></table></figure><h4 id="（3）-网站首页内容"><a href="#（3）-网站首页内容" class="headerlink" title="（3）.网站首页内容"></a>（3）.网站首页内容</h4><p>首页显示博客内容：</p><p>仅显示 5 个最新博客（默认）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">posts_overview:</span><br><span class="line">  show_all_posts: false</span><br><span class="line">  post_count: 5</span><br></pre></td></tr></table></figure><p>显示全部博客</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">posts_overview:</span><br><span class="line">  show_all_posts: true</span><br></pre></td></tr></table></figure><p>首页显示项目内容：</p><p>新建文件<code>source/_data/projects.json</code> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">       &quot;name&quot;:&quot;Hexo&quot;,</span><br><span class="line">       &quot;url&quot;:&quot;https://hexo.io/&quot;,</span><br><span class="line">       &quot;desc&quot;:&quot;A fast, simple &amp; powerful blog framework&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">       &quot;name&quot;:&quot;Font Awesome&quot;,</span><br><span class="line">       &quot;url&quot;:&quot;http://fontawesome.io/&quot;,</span><br><span class="line">       &quot;desc&quot;:&quot;The iconic font and CSS toolkit&quot;</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h4 id="（4）-社交网站链接"><a href="#（4）-社交网站链接" class="headerlink" title="（4）.社交网站链接"></a>（4）.社交网站链接</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">social_links:</span><br><span class="line">  github: your-github-url</span><br><span class="line">  twitter: your-twitter-url</span><br><span class="line">  NAME: your-NAME-url</span><br></pre></td></tr></table></figure><p><code>NAME</code> 是其在 <a href="https://fontawesome.com/icons?d=gallery&s=brands">Font Awesome icon</a> 当中的名字</p><h4 id="（5）-著作权年内容"><a href="#（5）-著作权年内容" class="headerlink" title="（5）.著作权年内容"></a>（5）.著作权年内容</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">copyright:</span><br><span class="line">  start_year: 2016</span><br><span class="line">  end_year:</span><br></pre></td></tr></table></figure><h2 id="发布到-Github-Page-页面"><a href="#发布到-Github-Page-页面" class="headerlink" title="发布到 Github Page 页面"></a>发布到 Github Page 页面</h2><h3 id="注册GitHub账户与创建仓库"><a href="#注册GitHub账户与创建仓库" class="headerlink" title="注册GitHub账户与创建仓库"></a>注册GitHub账户与创建仓库</h3><p>注册一个GitHub账户</p><p>在GitHub.com中看到一个New repository，新建仓库</p><p>创建一个和你用户名相同的仓库，后面加.github.io<br>这样，部署到GitHub page的时候，网页即为<code>xxxx.github.io</code></p><h3 id="生成SSH添加到GitHub"><a href="#生成SSH添加到GitHub" class="headerlink" title="生成SSH添加到GitHub"></a>生成SSH添加到GitHub</h3><p>在Git Bash当中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line">git config --global user.email &quot;youremail&quot;</span><br></pre></td></tr></table></figure><p>这里的yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱</p><p>然后创建SSH,一路回车</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;youremail&quot;</span><br></pre></td></tr></table></figure><p>在GitHub的setting中，找到SSH keys的设置选项，点击<code>New SSH key</code><br>把你的<code>id_rsa.pub</code>里面的信息复制进去</p><h3 id="部署！"><a href="#部署！" class="headerlink" title="部署！"></a>部署！</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>过一会儿就可以在<code>http://yourname.github.io</code> 这个网站看到你的博客了！</p><h2 id="其它修改"><a href="#其它修改" class="headerlink" title="其它修改"></a>其它修改</h2><h3 id="修改页脚显示内容"><a href="#修改页脚显示内容" class="headerlink" title="修改页脚显示内容"></a>修改页脚显示内容</h3><p>打开<code>hexo/themes/&lt;使用的主题名称&gt;/layout/_partial</code>路径下的<code>footer.ejs</code>文件  </p><p>以本站的ICP备案信息为例，在合适的位置插入如下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;https://icp.gov.moe/?keyword=20230011&quot; target=&quot;_blank&quot;&gt;萌ICP备20230011号&lt;/a&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World 崭新的博客！</title>
      <link href="/2022/12/23/hello-world/"/>
      <url>/2022/12/23/hello-world/</url>
      
        <content type="html"><![CDATA[<h2 id="你看到我了吗？"><a href="#你看到我了吗？" class="headerlink" title="你看到我了吗？"></a>你看到我了吗？</h2><p>这里是Wangquanlikun的个人GitHub Page页面，我是Wang Quan.  </p><p>这是我第二次创建个人博客了。相较于过去仅依赖Github Pages的默认配置的技术力低下，又经过了一段时间计算机科学的入门与学习，新版的个人博客参考了网络上的教程使用Hexo作为博客的框架，将以全新的内容呈现在大家的眼前 q(≧▽≦q)  </p><p>尽管还有很多的不足，但它确确实实地呈现在了大家的眼前。也希望经过我后续对网站前端等知识的学习，能把它做得更好！  </p><p>欢迎大家的到来，你也可以在博客的<a href="https://wangquanlikun.github.io/about/">关于</a>页面见到更多关于我自我介绍的内容  </p><p><strong>Hello World!</strong>  </p><blockquote><p>#include &lt;stdio.h&gt;<br>int main()<br>{<br>printf(“Hello World\n”);<br>return 0;<br>}</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>记再一次在Linux上使用clash代理的经历</title>
      <link href="/2022/11/14/Clash-in-Linux/"/>
      <url>/2022/11/14/Clash-in-Linux/</url>
      
        <content type="html"><![CDATA[<p>在收到新的硬盘之后，终于可以给我的新电脑装完整的Linux桌面了（原来只有512G真是抱歉了）<br>由此记录一下方法。虽然是网上很多地方都可以搜索到的教程，但是部分内容同质化严重，反复“ 引用借鉴 ”却没有修改其中的错误。这在我三年前第一次接触到Linux时给我带来了不少困扰  </p><h2 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h2><h4 id="1"><a href="#1" class="headerlink" title="1"></a>1</h4><p>在clash的<a href="https://github.com/Dreamacro/clash/releases">Github官网</a>下载适合的 Clash 二进制文件并解压重命名为<code>clash</code><br>方便起见，使用<code>cd &amp;&amp; mkdir clash</code>在用户目录下创建 clash 文件夹，放入该文件夹中</p><h4 id="2"><a href="#2" class="headerlink" title="2"></a>2</h4><p>在终端 cd 到 Clash 二进制文件所在的目录，执行 <code>wget -O config.yml &quot;clash订阅链接&quot;</code> 以及<code>wget -O config.yaml &quot;clash订阅链接&quot;</code>下载 Clash 配置文件<br>注：我能查找到的绝大部分教程，仅有下载config.yml的说明。相当于仅仅下载了代理分流规则而没有具体的节点信息  </p><h4 id="3"><a href="#3" class="headerlink" title="3"></a>3</h4><p>在当前目录下执行 <code>chmod +x clash</code>授予访问权限<br>执行 <code>./clash -d .</code> 即可启动 Clash，同时启动 HTTP 代理和 Socks5 代理 (注意指令完整)<br>第一次使用可能会提示下载<code>Country.mmdb</code>文件  </p><h4 id="4"><a href="#4" class="headerlink" title="4"></a>4</h4><p>访问 <a href="https://clash.razord.top/">Clash Dashboard</a> 可以进行切换节点、测延迟等操作。<br>Host: <code>127.0.0.1</code>，端口: <code>9090</code>  </p><h4 id="5"><a href="#5" class="headerlink" title="5"></a>5</h4><p>以Ubuntu为例，打开系统设置，选择网络，点击网络代理右边的 ⚙ 按钮，选择手动，填写 HTTP 和 HTTPS 代理为 <code>127.0.0.1:7890</code>，填写 Socks 主机为 <code>127.0.0.1:7891</code>，即可启用系统代理<br>部分应用可能仍需手动开启代理设置  </p><h2 id="一些想法"><a href="#一些想法" class="headerlink" title="一些想法"></a>一些想法</h2><p>一些简化操作的自动化脚本，如：<br>在/home新建如下脚本文件 <code>autoshartclash.sh</code>  内容为<code>cd ~/clash &amp;&amp; ./clash -d .</code></p><p>在clash文件夹中的更新订阅脚本文件<br>内容为<code>cd ~/clash &amp;&amp; cp ./config.yml ./cache/config.yml &amp;&amp; cp ./config.yaml ./cache/config.yaml &amp;&amp; wget -O config.yml &quot;clash订阅链接&quot; &amp;&amp; wget -O config.yaml &quot;clash订阅链接&quot;</code>  </p><p>有没有可能，把这些设置打包成一个应用，再加上GUI，就是真正的Clash in Linux了（逃）…<br>等什么时候有这个能力了，就把它做出来吧<sub>指正：别画大饼了</sub></p>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>摇曳露营-剧场版</title>
      <link href="/2022/11/13/Yuri-camp/"/>
      <url>/2022/11/13/Yuri-camp/</url>
      
        <content type="html"><![CDATA[<blockquote><p>我也曾以为，长大之后什么都能做到<br>可实际上，却多了责任，多了许多不得不做的事<br>到头来，即使长大成人，也还是被周围的人支撑着<br>让我明白了，不能一味只顾着自己<br>——志摩凛  </p></blockquote><p>在摇曳露营-剧场版中，她们都已长大成人，有了自己的工作与生活，但永远有着珍藏于心底的友谊与对露营的热爱。时间抹不去旧日的回忆，忙碌也淡忘不了最初的热爱。<br>最终，在众人的不懈努力之下，凝结着她们辛勤的露营场最终建好，而这样的一次事件也让老友重逢。 </p><p><img src="https://github.com/wangquanlikun/old.wangquanlikun.github.io/blob/main/IMAGES/blog_11_13_22.jpg?raw=true" alt="IMAGE">   </p><p>我也终将要踏入这个社会，迎接着属于自己的压力，我的热爱又会如何呢？  </p>]]></content>
      
      
      
        <tags>
            
            <tag> 二次元 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>间谍过家家</title>
      <link href="/2022/10/09/spy-family/"/>
      <url>/2022/10/09/spy-family/</url>
      
        <content type="html"><![CDATA[<p><strong>所有妄图粉饰战争的人，都没有见过真正的战场</strong><br><strong>和平的时间久了，就以为是理所应当</strong>  </p><blockquote><p>看来你们在大学没有学过“战争”啊</p></blockquote><p><img src="https://github.com/wangquanlikun/old.wangquanlikun.github.io/blob/main/IMAGES/blog_10_09__22.jpg?raw=true" alt="IMAGE">  </p><p>就如此相信政客所言，希望去挑起东西两国的战争吗？</p><p>我们在大学究竟应该学到什么？<br>极端民族主义者的出路难道是正确的吗？<br>在俄乌战争的当下，我们还能看到什么？  </p><p>虽然这样的故事在现实中看起来过于简陋<br>似乎正好印证了它“过家家”一般的国际与外交</p><p>就在这部作品中，黄昏看到阿尼亚和邦德和解之后<br>不由得感叹，如果东西两国也如此简单地和好就好了<br>但是现实毕竟不是过家家<br>我们的现实也一样  </p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>爱上火车 LastRun！</title>
      <link href="/2022/07/14/train/"/>
      <url>/2022/07/14/train/</url>
      
        <content type="html"><![CDATA[<p>爱上火车 Last Run!!  八六/奥莉薇线完成  </p><p><img src="https://github.com/wangquanlikun/old.wangquanlikun.github.io/blob/main/IMAGES/blog_07_14__22.jpg?raw=true" alt="IMAGE">  </p><p>相较于前作的八六线，在八六接触新生命之后，通过奥莉薇的来到与告别展现的生命的传承。正是因为其对宗方司机的深厚感情与来到御一夜之后作为家人所受到的关爱相加，在寿终正寝之后，用其人偶核制作出的两个新人偶带着这份温情，将生命的意义继续传承。<br>作为家人的奥莉薇，和作为火车人偶的奥莉薇，在这传承之中，拥有了崭新的生命。  </p><p>回观八六的故事，在与右田双铁相遇之后，无论是火车人偶的八六<sub>以及妻子的右田铃</sub>还是8620型蒸气机车都重获了新生，这样抚平了右田双铁内心的创伤，也同样借助这这独特的故事振兴了御一夜市和过去的蒸汽机车的时代。这亦是他们重获新生之旅。  </p>]]></content>
      
      
      
        <tags>
            
            <tag> 二次元 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>街角魔族 2丁目</title>
      <link href="/2022/07/02/Demon-girl-next-door/"/>
      <url>/2022/07/02/Demon-girl-next-door/</url>
      
        <content type="html"><![CDATA[<p><strong>街角魔族2丁目</strong>完结纪念！  </p><p><img src="https://github.com/wangquanlikun/old.wangquanlikun.github.io/blob/main/IMAGES/blog_07_02__22.jpg?raw=true" alt="IMAGE">  </p><p>女孩子之间友情乃至爱情的美好，集日常叙事与主线剧情的推进为一体，在幽默之中探寻更加深远的意义。</p><h2 id="日常中的不寻常"><a href="#日常中的不寻常" class="headerlink" title="日常中的不寻常"></a>日常中的不寻常</h2><p>一切都是在日常当中引出：平凡的少女优子<sub><del>夏美子</del></sub>在某天发现自己长出角和尾巴后得知自己并不是人类，为了振兴家业挑起了抵抗魔法少女的重担<br>日常的多魔市中，是魔族与魔法少女的日常与喜剧。人类对于所发生的一切，似乎都已习以为常</p><p>但是，在这样的日常之下，主线的贯穿也暗含其中：<br>生活中的每个细节，似乎都是早已安排好的巧合。日常的伏笔，在叙事中推动了背后故事的发展</p><p>不寻常的还有身为宿敌的魔法少女，少女×少女的百合恋爱戏剧？！</p>]]></content>
      
      
      
        <tags>
            
            <tag> 二次元 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>没有黄段子的无聊世界</title>
      <link href="/2022/04/03/yellow-joke/"/>
      <url>/2022/04/03/yellow-joke/</url>
      
        <content type="html"><![CDATA[<blockquote><p>因为我是只能在海水中生活的鱼，所以不断在练习游泳。<br>你明明是个猎豹，却不去练习奔跑，一会儿想飞上天空，一会儿想游进。<br>所以才一个猎物都捉不到。  </p></blockquote><p>以上内容出自<code>没有黄段子的无聊世界</code> 虽然如此，它却与我接下来要谈的事情没有什么关系  </p><p>国家强制性的禁止谈论所谓与色情沾边的一切事情，这样的故事，或许带有一丝反乌托邦的风格<br>但是，正如《1984》等反乌托邦小说一般。这样的故事，它有发生在我们身边吗？  </p><p>好比游戏和谐当中绿色的血一般，我们终究要学习到生物学有关的内容。这正如故事当中交配的果蝇一般</p><p>中国社会下的正确的性教育，到底该如何开展呢？<br>所谓的动漫游戏和谐而非正确分级的现象，什么时候可以消停呢？</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>十年前的新年献词</title>
      <link href="/2021/12/31/New-year/"/>
      <url>/2021/12/31/New-year/</url>
      
        <content type="html"><![CDATA[<blockquote><p>点亮自己，权利便能着床，能动的个体由之生焉，公民由之成焉；点亮自己，权利便会团结于权利，公民社会由之生焉，制衡权力的力量由之成焉。<br>人们深爱自己的国家，只因她能保障正义与安全，只因她不断由公民们亲手“重建”。国家与公民之间血脉贯通，于是公民的悲伤，成为国家的悲伤，于是国家的荣光，成为公民的荣光。<br>—《南方周末》2012年新年献词节选  </p></blockquote><p>十年前：<br>点亮自己，权利便能着床，能动的个体由之生焉，公民由之成焉；点亮自己，权利便会团结于权利，公民社会由之生焉，制衡权力的力量由之成焉。<br>十年后：<br>而每一个你我，绝不躺平，绝不由天，要努力在时代与命运的罗盘上刻下印记，以千万个一粟聚成洪流，汇于沧海。<br>所以这十年，在温水煮青蛙里，我们究竟失去了哪些曾经被认为的公理、良知，丧失了何种争论的权利？</p><p>十年来，我们改变了很多。正如纪念温州动车事故十周年时所说的那样  </p><blockquote><p>动车事件时<br>媒体和网民对政府的舆论监督，<br>早已不复存在。<br>一同消失的，还有反思的空间，与“慢下来”的选项。</p></blockquote><p>至于你信不信，我反正信了  </p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>未成年防沉迷法案</title>
      <link href="/2021/09/04/game/"/>
      <url>/2021/09/04/game/</url>
      
        <content type="html"><![CDATA[<p>关于新的未成年防沉迷法案，无论如何何我是强烈反对的。即使是曾经温和的方案，也是同样的毫无必要要，但不得不说，这确实是国内限制一种温水煮青蛙的体现了。<br>很多未成年人在境内几乎没有发声机会与能力，抖音之类平台全是所谓家长的赞美之声，这最终将将导致政策毫无阻力地进行下去。  </p><p>下一代将何去何从？  </p><p>这种粗略的以十八岁为分界的政策，既不不现实，也毫无意义。<br>正如某人所说，如果人生是一条函数数，那么在十八岁那一点不可导。<br>或者说，曾受到了限制，在大学之后就该放纵了吧。  </p><blockquote><p>我们并非忧虑于无法游玩游戏，如同先审后播一样，只是我们担心这每一次改革都会成为我们的温水  </p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Old Website</title>
      <link href="/2021/02/18/Old-website/"/>
      <url>/2021/02/18/Old-website/</url>
      
        <content type="html"><![CDATA[<h1 id="此为原个人网站的备份"><a href="#此为原个人网站的备份" class="headerlink" title="此为原个人网站的备份"></a>此为原个人网站的备份</h1><p>原网站最后编辑于2021/2/18<br>点击<a href="https://wangquankun.zyrosite.com/">这里</a>前往原网站<br>备份时间2022/10/13<br>&emsp;   </p><h2 id="Doki-Doki-Website"><a href="#Doki-Doki-Website" class="headerlink" title="Doki Doki Website"></a><strong>Doki Doki Website</strong></h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">我们所经历的每个平凡的日常，也许就是连续发生的奇迹。  </span><br><span class="line">日々私たちが過ごしている日常は、実は、奇跡の連続なのかもしれない。  </span><br></pre></td></tr></table></figure><h4 id="Contact-ME"><a href="#Contact-ME" class="headerlink" title="Contact ME"></a><strong>Contact ME</strong></h4><p>BILIBILI <a href="https://space.bilibili.com/346699824">Link</a><br>GOOGLE <a href="mailto:wangquanlikun159@gmail.com">Link</a><br>QQ E-mail <a href="mailto:2817435687@qq.com">Link</a><br>Telegram Link</p><h2 id="ABOUT-ME"><a href="#ABOUT-ME" class="headerlink" title="ABOUT ME"></a><strong>ABOUT ME</strong></h2><p>也许，你在寻找热爱二次元的同好？<br>也许，你需要一个能勉强使用AE、Pr等视频制作工具的人？<br>也许，你也像我一样对信息技术感兴趣？<br>也许，你从各种意义上说都是阅片无数😏？<br>也许，你也是老冲国DD了？<br>也许，你需要我自行整理的超30GB的图包？<br>也许，你也喜欢制作VOCALOID或UTAU的翻唱？<br><strong>总之，这是一个老二次元（LSP）了（笑）</strong><br>各种合作与py交易请通过首页方法与我联系<br>祝各位能有美好的一天(●’◡’●)<br>另外，百合赛高！萝莉赛高！！！  </p><h2 id="那些有哲理的话"><a href="#那些有哲理的话" class="headerlink" title="那些有哲理的话"></a><strong>那些有哲理的话</strong></h2><p>1.我们总是在意自己错过太多，却不曾注意自己拥有多少。——《未闻花名》<br>2.当环境最昏暗时，火焰燃烧的光芒才最夺目。——《哈尔的移动城堡》<br>3.正因为没有翅膀，人们才会寻找飞翔的方法。——《排球少年》<br>4.上帝会扼住你的喉咙，但不会让你窒息。——《Megalo Box》<br>5.青春是萤火绚丽的流动银河，灿烂却也极致短暂——《萤火之森》<br>6.家人是比梦想更重要的事情。——《寻梦环游记》<br>7.或许幸福像玻璃一样，因为平时从未察觉。——《反叛的鲁鲁修》<br>8.隔岸观火的人永远无法明白起火的原因，只有置身风暴，才能找到凤眼之所在。——《秦时明月》<br>9.你既然已经做出了选择，又何必去问为什么选择。——《秦时明月》<br>10.重要的东西全部都在半径三米以内。——《悬崖上的金鱼姬》<br>11.真正重要的东西，总是没有的人比拥有的人清楚。——《银魂》<br>12.如果一切不如你所愿，就在尘埃落定前奋力一搏。——《夏目友人帐》<br>13.人们总是追求表面答案，结果错失无可取代的宝物。——《灌篮高手》ED歌词<br>14.只有阳光而无阴影，只有欢乐而无痛苦，那就不是人生。——《岁月的童话》<br>15.什么都无法舍弃的人，什么都改变不了——《进击的巨人》<br>16.只会躲在后方摇旗呐喊的人注定不会有追随者。——《机动战士高达SEED DESTINY》<br>17.一个人若没有怀揣过大的梦想，也就无法到达向往的地方。——《冰上的尤里》<br>18.人类的赞歌就是勇气的赞歌，人类的伟大就是勇气的伟大。——《JOJO的奇妙冒险》<br>19.无可阻挡的热血加上想要不断进步的决心和坚持，最终所创造出来的就是奇迹。——《食梦者》<br>&emsp;<br>收集整理by BV1ST4y1j7vn  </p><h2 id="Some-Other-Things"><a href="#Some-Other-Things" class="headerlink" title="Some Other Things"></a><strong>Some Other Things</strong></h2><p>也许，我会利用这个网址干点其它事情？<br>同时，也欢迎更多的技术大佬前来丰富内容  </p><h2 id="Maybe-the-last-page"><a href="#Maybe-the-last-page" class="headerlink" title="Maybe the last page"></a><strong>Maybe the last page</strong></h2><p>为什么我建了这样的一个网站？<br>看到很多人都在经营自己的公众号、博客之类，我便也想来弄一个。因为诸多原因，我只能使用它作为服务器代理发布，并且浏览量可能会比一开始的SOS团网站还惨（笑）。<br>其实我一直有一个很大的目标，就是希望能建成一个网站，有一个可以让同学们自由讨论各种问题的地方【毕竟因为在知乎上的讨论已经少有存活了】，甚至是大家来share各种答案（好孩子一定要自己认真完成哦！）不过，现在真的就是只能想想罢了。<br>另：其实我在学校的学习中真的很菜，而且这个网站也是相当的简陋，简直让各位真正的大佬见笑了。<br>&emsp;<br>Designed  by wangquankun<br>Without Internet ICP filing<br>Copyright all rights reserved<br>&emsp;<br>————王权琨————<br>&emsp;<br>／人◕ ‿‿ ◕人＼  </p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
